# Admin Module Template Fragments

TemplateFragment:
    meta:
      tablename: template_fragments
      schema: public
    data:
      template_uuid: 00000000-0000-0000-0000-000000000002
      fragment_type: header
      fragment_name: Admin Header Bar
      fragment_key: header
      template_file_path: admin/fragments/header.html
      compiled_file_path: compiled/admin/fragments/header.html
      content_type: text/html
      version_number: 1
      version_label: v1.0.0
      is_active: true
      template_source: |
        <div class="topbar">
            <span>Documentation Portal | Latest Updates | Support</span>
        </div>
        <header class="header">
            <h1>Documentation Site</h1>
            <div class="header_actions">
                <div class="nine_dot_menu">
                    <button class="nine_dot_btn" onclick="toggle_nine_dot_dropdown()">
                        <i class="fas fa-th"></i>
                    </button>
                    <div class="nine_dot_dropdown" id="nine_dot_dropdown">
                        <div class="dropdown_section">
                            <h4>Appearance</h4>
                            <div class="theme_toggle">
                                <label class="switch">
                                    <input type="checkbox" id="dark_mode_toggle" onchange="toggle_theme()">
                                    <span class="slider"></span>
                                </label>
                                <span class="toggle_label">Dark Mode</span>
                            </div>
                        </div>
                        <div class="dropdown_section">
                        </div>
                        <div class="dropdown_section">
                          <h4>Account</h4>
                                  <a href="#" class="dropdown_link" onclick="window.logout(); return false;">
                                      <i class="fas fa-sign-out-alt"></i> Logout
                                  </a>
                          </div>
                    </div>
                </div>
            </div>
        </header>
        <script>
          function toggle_nine_dot_dropdown() {
              const dropdown = document.getElementById('nine_dot_dropdown');
              dropdown.classList.toggle('show');
          }

          function toggle_theme() {
              const toggle = document.getElementById('dark_mode_toggle');
              const html = document.documentElement;

              if (toggle.checked) {
                  html.setAttribute('data-theme', 'dark');
                  localStorage.setItem('theme_preference', 'dark');
              } else {
                  html.setAttribute('data-theme', 'light');
                  localStorage.setItem('theme_preference', 'light');
              }
          }

          function get_theme_preference() {
              const saved_preference = localStorage.getItem('theme_preference');
              if (saved_preference !== null) {
                  return saved_preference;
              }
              return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';
          }

          function apply_theme(theme) {
              const html = document.documentElement;
              const toggle = document.getElementById('dark_mode_toggle');
              
              html.setAttribute('data-theme', theme);
              if (toggle) {
                  toggle.checked = theme === 'dark';
              }
              localStorage.setItem('theme_preference', theme);
          }

          function reset_theme_to_auto() {
              localStorage.removeItem('theme_preference');
              const system_theme = window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';
              apply_theme(system_theme);
          }

          // Initialize theme on load
          document.addEventListener('DOMContentLoaded', function() {
              const preferred_theme = get_theme_preference();
              apply_theme(preferred_theme);
          });

          // Close dropdown when clicking outside
          document.addEventListener('click', function(event) {
              const menu = document.querySelector('.nine_dot_menu');
              const dropdown = document.getElementById('nine_dot_dropdown');

              if (!menu.contains(event.target)) {
                  dropdown.classList.remove('show');
              }
          });

          </script>
        
      template_hash: null
      variables_schema: |
        {
          "type": "object",
          "properties": {
            "current_user": {
              "type": "object",
              "properties": {
                "name": {"type": "string"},
                "avatar_url": {"type": "string"}
              },
              "required": ["name"]
            },
            "app_name": {"type": "string"}
          },
          "required": ["current_user", "app_name"]
        }
      sample_data: |
        {
          "current_user": {
            "name": "Admin User",
            "avatar_url": "/static/img/admin-avatar.jpg"
          },
          "app_name": "System"
        }
      required_context: |
        ["current_user", "app_name"]
      dependencies: null
      css_dependencies: |
        ["/static/css/bootstrap.min.css"]
      js_dependencies: |
        ["/static/js/admin-header.js"]
      description: Admin interface header with navigation toggle and user menu
      usage_notes: Sticky header bar for admin interface
      preview_template: admin/previews/header.html
      sort_order: 2
      is_partial: true
      cache_strategy: dynamic
      cache_duration: 300
      last_compiled: null
      change_description: Added 9-square menu with dropdown and theme toggle
      created_by_user_uuid: null