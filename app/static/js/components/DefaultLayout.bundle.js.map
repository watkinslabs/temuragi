{"version":3,"file":"components/DefaultLayout.bundle.js","mappings":"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","sources":["webpack://react-app/webpack/universalModuleDefinition","webpack://react-app/webpack/runtime/chunk loaded","webpack://react-app/./src/config/index.js","webpack://react-app/./src/contexts/AuthContext.js","webpack://react-app/./src/contexts/SiteContext.js","webpack://react-app/./src/components/layout/NineDotMenu.js","webpack://react-app/./src/components/layout/Breadcrumbs.js","webpack://react-app/./src/components/layout/SidebarMenu.js","webpack://react-app/./src/components/DefaultLayout.js","webpack://react-app/webpack/bootstrap","webpack://react-app/webpack/runtime/define property getters","webpack://react-app/webpack/runtime/hasOwnProperty shorthand","webpack://react-app/webpack/runtime/runtimeId","webpack://react-app/webpack/runtime/jsonp chunk loading","webpack://react-app/webpack/startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"components/DefaultLayout\"] = factory();\n\telse\n\t\troot[\"components/DefaultLayout\"] = factory();\n})(self, () => {\nreturn ","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// react/src/config/index.js\nconst config = {\n    api: {\n        base: '/v2/api',\n        endpoints: {\n            // Auth endpoints\n            auth: {\n                login: '/auth/login',\n                logout: '/auth/logout',\n                validate: '/auth/validate',\n                refresh: '/auth/refresh',\n                status: '/auth/status'\n            },\n            // Template endpoints\n            templates: {\n                get: '/templates/:slug'\n            },\n            // Route resolution\n            routes: {\n                resolve: '/routes/resolve',\n                list: '/routes'\n            },\n            // Data endpoint\n            data: '/data'\n        }\n    },\n    \n    // Build full URL from endpoint\n    getUrl: (endpoint, params = {}) => {\n        let url = `${config.api.base}${endpoint}`;\n        \n        // Replace URL parameters like :name\n        Object.keys(params).forEach(key => {\n            url = url.replace(`:${key}`, params[key]);\n        });\n        \n        return url;\n    },\n    \n    // Get auth headers\n    getAuthHeaders: () => ({\n        'Authorization': `Bearer ${localStorage.getItem('api_token') || ''}`,\n        'X-CSRF-Token': document.querySelector('meta[name=\"csrf-token\"]')?.content || '',\n        'Content-Type': 'application/json'\n    })\n};\n\n// Make it available globally if needed\nwindow.appConfig = config;\n\nexport default config;","// react/src/contexts/AuthContext.js\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport config from '../config';\n\nconst AuthContext = createContext(null);\n\nexport const useAuth = () => {\n    const context = useContext(AuthContext);\n    if (!context) throw new Error('useAuth must be used within AuthProvider');\n    return context;\n};\n\nexport const AuthProvider = ({ children }) => {\n    const [isAuthenticated, setIsAuthenticated] = useState(false);\n    const [loading, setLoading] = useState(true);\n    const [user, setUser] = useState(null);\n    \n    // We'll need to access SiteContext's clear_section\n    const [clear_site_callback, setClearSiteCallback] = useState(null);\n\n    // Allow SiteProvider to register its clear function\n    const register_clear_site = (callback) => {\n        setClearSiteCallback(() => callback);\n    };\n\n    // Check if we have valid tokens on mount\n    useEffect(() => {\n        checkAuth();\n    }, []);\n\n    const checkAuth = async () => {\n        const api_token = localStorage.getItem('api_token');\n        const refresh_token = localStorage.getItem('refresh_token');\n\n        if (!api_token || !refresh_token) {\n            setLoading(false);\n            return;\n        }\n\n        try {\n            // First try to validate the current token\n            const response = await fetch(config.getUrl(config.api.endpoints.auth.validate), {\n                method: 'POST',\n                headers: {\n                    'Authorization': `Bearer ${api_token}`,\n                    'Content-Type': 'application/json',\n                    'X-CSRF-Token': document.querySelector('meta[name=\"csrf-token\"]')?.content || ''\n                }\n            });\n\n            if (response.ok) {\n                const data = await response.json();\n                setIsAuthenticated(true);\n                setUser(data.user_info);\n\n                // Set up periodic token validation\n                start_token_check_interval();\n            } else if (response.status === 401) {\n                // Token is invalid, try to refresh\n                const refresh_success = await refreshToken();\n                if (refresh_success) {\n                    // Retry validation after refresh\n                    await checkAuth();\n                } else {\n                    // Refresh failed, clear auth\n                    clearAuth();\n                }\n            } else {\n                // Other error, clear auth\n                clearAuth();\n            }\n        } catch (error) {\n            console.error('Auth check failed:', error);\n            clearAuth();\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const login = async (username, password, remember) => {\n        try {\n            const response = await fetch(config.getUrl(config.api.endpoints.auth.login), {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'X-CSRF-Token': document.querySelector('meta[name=\"csrf-token\"]')?.content || ''\n                },\n                body: JSON.stringify({ username, password, remember })\n            });\n    \n            if (response.ok) {\n                const data = await response.json();\n    \n                // Store tokens\n                localStorage.setItem('api_token', data.api_token);\n                localStorage.setItem('refresh_token', data.refresh_token);\n                localStorage.setItem('user_id', data.user_id);\n                localStorage.setItem('user_info', JSON.stringify(data.user_info));\n                \n                // Store the ACTUAL default context from login\n                if (data.default_context) {\n                    localStorage.setItem('default_context', data.default_context);\n                    sessionStorage.setItem('current_context', data.default_context);\n                    sessionStorage.setItem('current_section', data.default_context); // Also store as section for compatibility\n                }\n                \n                // Handle remember me\n                if (remember) {\n                    localStorage.setItem('remembered_username', username);\n                } else {\n                    localStorage.removeItem('remembered_username');\n                }\n    \n                setIsAuthenticated(true);\n                setUser(data.user_info);\n    \n                // Start token check interval after successful login\n                start_token_check_interval();\n    \n                return {\n                    success: true,\n                    landing_page: data.landing_page || '/',\n                    default_context: data.default_context  \n                };\n            } else {\n                const error_data = await response.json();\n                return {\n                    success: false,\n                    message: error_data.message || 'Login failed'\n                };\n            }\n        } catch (error) {\n            console.error('Login error:', error);\n            return { success: false, message: 'Login failed' };\n        }\n    };\n\n    const refreshToken = async () => {\n        const refresh_token = localStorage.getItem('refresh_token');\n        if (!refresh_token) {\n            clearAuth();\n            return false;\n        }\n\n        try {\n            const response = await fetch(config.getUrl(config.api.endpoints.auth.refresh), {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'X-CSRF-Token': document.querySelector('meta[name=\"csrf-token\"]')?.content || ''\n                },\n                body: JSON.stringify({ refresh_token })\n            });\n\n            if (response.ok) {\n                const data = await response.json();\n                localStorage.setItem('api_token', data.api_token);\n\n                // Update user info if provided\n                if (data.user_info) {\n                    localStorage.setItem('user_info', JSON.stringify(data.user_info));\n                    setUser(data.user_info);\n                }\n\n                setIsAuthenticated(true);\n                return true;\n            } else {\n                // Refresh token is also invalid\n                console.log('Refresh token invalid, logging out');\n                clearAuth();\n                return false;\n            }\n        } catch (error) {\n            console.error('Token refresh failed:', error);\n            clearAuth();\n            return false;\n        }\n    };\n\n    const logout = () => {\n        clearAuth();\n        // Clear site context if callback is registered\n        if (clear_site_callback) {\n            clear_site_callback();\n        }\n    };\n\n    const clearAuth = () => {\n        // Clear all auth data\n        localStorage.removeItem('api_token');\n        localStorage.removeItem('refresh_token');\n        localStorage.removeItem('user_id');\n        localStorage.removeItem('user_info');\n        localStorage.removeItem('default_context');  // Changed from default_section\n    \n        // Clear state\n        setIsAuthenticated(false);\n        setUser(null);\n    \n        // Stop token check interval\n        stop_token_check_interval();\n    };\n\n    // Periodic token validation\n    let token_check_interval = null;\n\n    const start_token_check_interval = () => {\n        // Clear any existing interval\n        stop_token_check_interval();\n\n        // Check token every 5 minutes\n        token_check_interval = setInterval(async () => {\n            const api_token = localStorage.getItem('api_token');\n            if (!api_token) {\n                clearAuth();\n                return;\n            }\n\n            try {\n                const response = await fetch(config.getUrl(config.api.endpoints.auth.validate), {\n                    method: 'POST',\n                    headers: {\n                        'Authorization': `Bearer ${api_token}`,\n                        'Content-Type': 'application/json',\n                        'X-CSRF-Token': document.querySelector('meta[name=\"csrf-token\"]')?.content || ''\n                    }\n                });\n\n                if (!response.ok) {\n                    if (response.status === 401) {\n                        // Try to refresh\n                        const refresh_success = await refreshToken();\n                        if (!refresh_success) {\n                            // Refresh failed, clear auth but don't redirect here\n                            // Let the ProtectedRoute component handle navigation\n                            clearAuth();\n                        }\n                    }\n                }\n            } catch (error) {\n                console.error('Token validation error:', error);\n            }\n        }, 5 * 60 * 1000); // 5 minutes\n    };\n\n    const stop_token_check_interval = () => {\n        if (token_check_interval) {\n            clearInterval(token_check_interval);\n            token_check_interval = null;\n        }\n    };\n\n    // Clean up interval on unmount\n    useEffect(() => {\n        return () => {\n            stop_token_check_interval();\n        };\n    }, []);\n\n    // Set up global auth headers helper\n    useEffect(() => {\n        if (!window.app) window.app = {};\n\n        window.app.getAuthHeaders = () => {\n            const token = localStorage.getItem('api_token');\n            return {\n                'Authorization': token ? `Bearer ${token}` : '',\n                'X-CSRF-Token': document.querySelector('meta[name=\"csrf-token\"]')?.content || ''\n            };\n        };\n\n        // Add global request interceptor for 401 responses\n        const original_fetch = window.fetch;\n        window.fetch = async (...args) => {\n            const response = await original_fetch(...args);\n\n            // If we get a 401 and we're not already on the login page\n            if (response.status === 401 && !window.location.pathname.includes('/login')) {\n                const url = typeof args[0] === 'string' ? args[0] : args[0].url;\n\n                // Don't intercept auth endpoints\n                if (!url.includes('/auth/')) {\n                    // Try to refresh token\n                    const refresh_success = await refreshToken();\n                    if (refresh_success) {\n                        // Retry the original request with new token\n                        if (args[1] && args[1].headers) {\n                            args[1].headers['Authorization'] = `Bearer ${localStorage.getItem('api_token')}`;\n                        }\n                        return original_fetch(...args);\n                    } else {\n                        // Refresh failed, clear auth\n                        clearAuth();\n                    }\n                }\n            }\n\n            return response;\n        };\n\n        // Restore original fetch on cleanup\n        return () => {\n            window.fetch = original_fetch;\n        };\n    }, []);\n\n    return (\n        <AuthContext.Provider value={{\n            isAuthenticated,\n            loading,\n            user,\n            login,\n            logout,\n            refreshToken,\n            checkAuth,\n            register_clear_site\n        }}>\n            {children}\n        </AuthContext.Provider>\n    );\n};","// react/src/contexts/SiteContext.js\nimport React, { createContext, useState, useContext, useRef, useCallback, useEffect } from 'react';\nimport config from '../config';\n\nconst SiteContext = createContext(null);\n\nexport const useSite = () => {\n    const context = useContext(SiteContext);\n    if (!context) throw new Error('useSite must be used within SiteProvider');\n    return context;\n};\n\nexport const SiteProvider = ({ children }) => {\n    const [current_context, setCurrentContext] = useState(() => {\n        // Check session storage for current session's context\n        return sessionStorage.getItem('current_context') || null;\n    });\n\n    const [available_contexts, setAvailableContexts] = useState([]);\n    const [context_loading, setContextLoading] = useState(false);\n\n    // Cache for site configs by context\n    const site_config_cache = useRef({});\n    const [current_site_config, setCurrentSiteConfig] = useState(() => {\n        // Check for initial site config from login\n        const initial_config = sessionStorage.getItem('initial_site_config');\n        if (initial_config) {\n            const config = JSON.parse(initial_config);\n            sessionStorage.removeItem('initial_site_config'); // Clean up\n            return config;\n        }\n        return null;\n    });\n\n    // Track what we're currently fetching to prevent duplicate requests\n    const fetching_context = useRef(null);\n\n    // Initialize cache with initial config if available\n    useEffect(() => {\n        if (current_site_config && current_context && !site_config_cache.current[current_context]) {\n            site_config_cache.current[current_context] = current_site_config;\n            if (current_site_config.contexts) {\n                setAvailableContexts(current_site_config.contexts);\n            }\n        }\n    }, []); // Empty dependency array - only run once on mount\n\n    // Initialize default context from login\n    const initialize_context = (default_context) => {\n        console.log('Initializing context:', default_context);\n        if (!current_context && default_context) {\n            setCurrentContext(default_context);\n            sessionStorage.setItem('current_context', default_context);\n        }\n    };\n\n    // Get the current context, with fallback to default\n    const get_current_context = () => {\n        return current_context || localStorage.getItem('default_context') || 'default';\n    };\n\n    const fetch_site_config = useCallback(async (path = '/') => {\n        const context = get_current_context();\n    \n        // Don't fetch if we're already fetching\n        if (fetching_context.current === context) {\n            return;\n        }\n    \n        fetching_context.current = context;\n        setContextLoading(true);\n    \n        try {\n            const request_body = {\n                path: path,\n                context: context,\n                include_contexts: true\n            };\n    \n            const response = await fetch(config.getUrl('/site/config'), {\n                method: 'POST',\n                headers: config.getAuthHeaders(),\n                body: JSON.stringify(request_body)\n            });\n    \n            if (response.ok) {\n                const data = await response.json();\n    \n                // Create a properly structured site config object\n                const site_config_data = {\n                    ...data.site,\n                    menu_items: data.menu?.items || [],\n                    contexts: data.contexts || [],\n                    current_context: data.current_context\n                };\n    \n                setCurrentSiteConfig(site_config_data);\n    \n                if (data.contexts) {\n                    setAvailableContexts(data.contexts);\n                }\n    \n                if (data.current_context && data.current_context !== context) {\n                    setCurrentContext(data.current_context);\n                    sessionStorage.setItem('current_context', data.current_context);\n                }\n    \n                return site_config_data;\n            }\n        } catch (error) {\n            console.error('Site config fetch error:', error);\n        } finally {\n            setContextLoading(false);\n            fetching_context.current = null;\n        }\n    }, [current_context]);\n\n    // In SiteContext.js, update the switch_context function:\n    const switch_context = async (context_name) => {\n        console.log('Switching context from', current_context, 'to', context_name);\n        \n        // Update the context immediately\n        setCurrentContext(context_name);\n        sessionStorage.setItem('current_context', context_name);\n        \n        // Clear current config to show loading state\n        setCurrentSiteConfig(null);\n        \n        // Fetch new config\n        setContextLoading(true);\n    \n        try {\n            const request_body = {\n                path: '/',\n                context: context_name,\n                include_contexts: true\n            };\n    \n            const response = await fetch(config.getUrl('/site/config'), {\n                method: 'POST',\n                headers: config.getAuthHeaders(),\n                body: JSON.stringify(request_body)\n            });\n    \n            if (response.ok) {\n                const data = await response.json();\n                \n                // Create a properly structured site config object\n                const site_config_data = {\n                    ...data.site,\n                    menu_items: data.menu?.items || [],\n                    contexts: data.contexts || [],\n                    current_context: data.current_context\n                };\n    \n                // Update everything\n                setCurrentSiteConfig(site_config_data);\n                \n                if (data.contexts) {\n                    setAvailableContexts(data.contexts);\n                }\n    \n                // If server returned different context, update it\n                if (data.current_context && data.current_context !== context_name) {\n                    setCurrentContext(data.current_context);\n                    sessionStorage.setItem('current_context', data.current_context);\n                }\n            }\n        } catch (error) {\n            console.error('Context switch error:', error);\n        } finally {\n            setContextLoading(false);\n        }\n    };\n    // Clear context data on logout\n    const clear_context = () => {\n        setCurrentContext(null);\n        setAvailableContexts([]);\n        setCurrentSiteConfig(null);\n        site_config_cache.current = {};\n        sessionStorage.removeItem('current_context');\n    };\n\n    return (\n        <SiteContext.Provider value={{\n            current_context,\n            available_contexts,\n            context_loading,\n            site_config: current_site_config,\n            setAvailableContexts,\n            setContextLoading,\n            initialize_context,\n            switch_context,\n            clear_context,\n            get_current_context,\n            fetch_site_config\n        }}>\n            {children}\n        </SiteContext.Provider>\n    );\n};","import React, { useState, useEffect, useRef } from 'react';\n\nconst NineDotMenu = ({\n    theme,\n    user,\n    available_contexts,\n    current_context,\n    onSwitchContext,\n    onToggleTheme,\n    onLogout\n}) => {\n    const [is_open, setIsOpen] = useState(false);\n    const menu_ref = useRef(null);\n\n    // Handle outside clicks\n    useEffect(() => {\n        if (!is_open) return;\n\n        const handle_outside_click = (e) => {\n            if (menu_ref.current && !menu_ref.current.contains(e.target)) {\n                setIsOpen(false);\n            }\n        };\n\n        // Add delay to prevent immediate trigger\n        const timer = setTimeout(() => {\n            document.addEventListener('click', handle_outside_click);\n        }, 100);\n\n        return () => {\n            clearTimeout(timer);\n            document.removeEventListener('click', handle_outside_click);\n        };\n    }, [is_open]);\n\n    const handle_context_switch = (context_name) => {\n        onSwitchContext(context_name);\n        setIsOpen(false);\n    };\n\n    const handle_theme_toggle = () => {\n        onToggleTheme();\n    };\n\n    const handle_logout = (e) => {\n        e.preventDefault();\n        onLogout();\n        setIsOpen(false);\n    };\n\n    // Debug current state\n    useEffect(() => {\n        console.log('NineDotMenu state:', {\n            current_context,\n            available_contexts,\n            user,\n            contexts_type: Array.isArray(available_contexts) ? 'array' : typeof available_contexts,\n            contexts_content: available_contexts\n        });\n    }, [current_context, available_contexts, user]);\n\n    return (\n        <div className=\"nine_dot_menu\" ref={menu_ref} style={{ position: 'relative' }}>\n            <button\n                className=\"nine_dot_btn\"\n                onClick={(e) => {\n                    e.preventDefault();\n                    e.stopPropagation();\n                    setIsOpen(prev => !prev);\n                }}\n                type=\"button\"\n                style={{\n                    background: 'none',\n                    border: 'none',\n                    padding: '8px',\n                    cursor: 'pointer',\n                    fontSize: '20px',\n                    color: 'inherit'\n                }}\n                aria-label=\"Settings menu\"\n                aria-expanded={is_open}\n            >\n                <i className=\"fas fa-th\"></i>\n            </button>\n\n            {is_open && (\n                <div\n                    className=\"nine_dot_dropdown\"\n                    style={{\n                        position: 'absolute',\n                        right: 0,\n                        top: '100%',\n                        marginTop: '8px',\n                        minWidth: '250px',\n                        backgroundColor: theme === 'dark' ? 'var(--theme-surface-dark)' : 'var(--theme-surface)',\n                        border: `1px solid ${theme === 'dark' ? 'var(--theme-border-color-dark)' : 'var(--theme-border-color)'}`,\n                        borderRadius: 'var(--theme-card-border-radius)',\n                        boxShadow: 'var(--theme-shadow-lg)',\n                        zIndex: 1000,\n                        padding: '16px',\n                        color: theme === 'dark' ? 'var(--theme-text-dark)' : 'var(--theme-text)'\n                    }}\n                >\n                    {/* Context Switcher */}\n                    {console.log('Contexts check:', {\n                        available_contexts,\n                        length: available_contexts?.length,\n                        show: available_contexts && available_contexts.length > 1\n                    })}\n                    {available_contexts && available_contexts.length > 0 && (\n                        <>\n                            <div className=\"dropdown_section mb-3\">\n                                <h6 className=\"mb-2\" style={{\n                                    color: theme === 'dark' ? 'var(--theme-text-muted-dark)' : 'var(--theme-text-muted)'\n                                }}>\n                                    Application Switcher\n                                </h6>\n                                <div className=\"context_switcher\">\n                                    {available_contexts.map(context => {\n                                        // Compare using the ID field since that's what the server expects\n                                        const is_active = current_context === context.name ||\n                                                         // Also check if current_context matches the context field\n                                                         (context.context && current_context === context.context);\n\n                                        // Debug logging\n                                        console.log('Context comparison:', {\n                                            context,\n                                            current_context,\n                                            is_active,\n                                            checks: {\n                                                name_match: current_context === context.name,\n                                                context_match: context.context && current_context === context.context\n                                            }\n                                        });\n\n                                        return (\n                                            <button\n                                                key={context.name}\n                                                type=\"button\"\n                                                className={`btn btn-sm w-100 mb-2 ${\n                                                    is_active\n                                                        ? 'btn-primary'\n                                                        : 'btn-outline-secondary'\n                                                }`}\n                                                onClick={() => handle_context_switch(context.name)}\n                                                disabled={is_active}\n                                            >\n                                                {context.icon && <i className={`${context.icon} me-2`}></i>}\n                                                {context.display || context.name}\n                                            </button>\n                                        );\n                                    })}\n                                </div>\n                            </div>\n                            <hr className=\"my-2\" style={{\n                                borderColor: theme === 'dark' ? 'var(--theme-border-color-dark)' : 'var(--theme-border-color)',\n                                opacity: 0.5\n                            }} />\n                        </>\n                    )}\n\n                    {/* Theme Toggle */}\n                    <div className=\"dropdown_section mb-3\">\n                        <h6 className=\"mb-2\" style={{\n                            color: theme === 'dark' ? 'var(--theme-text-muted-dark)' : 'var(--theme-text-muted)'\n                        }}>\n                            Appearance\n                        </h6>\n                        <div className=\"theme_toggle d-flex align-items-center\">\n                            <div className=\"form-check form-switch\">\n                                <input\n                                    className=\"form-check-input\"\n                                    type=\"checkbox\"\n                                    id=\"dark_mode_toggle\"\n                                    checked={theme === 'dark'}\n                                    onChange={handle_theme_toggle}\n                                />\n                                <label className=\"form-check-label ms-2\" htmlFor=\"dark_mode_toggle\">\n                                    Dark Mode\n                                </label>\n                            </div>\n                        </div>\n                    </div>\n\n                    <hr className=\"my-2\" style={{\n                        borderColor: theme === 'dark' ? 'var(--theme-border-color-dark)' : 'var(--theme-border-color)',\n                        opacity: 0.5\n                    }} />\n\n                    {/* Account Section */}\n                    <div className=\"dropdown_section\">\n                        <h6 className=\"mb-2\" style={{\n                            color: theme === 'dark' ? 'var(--theme-text-muted-dark)' : 'var(--theme-text-muted)'\n                        }}>\n                            Account\n                        </h6>\n                        {user && (\n                            <div className=\"user_info mb-3 p-2 rounded\" style={{\n                                backgroundColor: theme === 'dark' ? 'var(--theme-background-dark)' : 'var(--theme-component)',\n                                border: `1px solid ${theme === 'dark' ? 'var(--theme-border-color-dark)' : 'var(--theme-border-color)'}`\n                            }}>\n                                <small className=\"d-block\" style={{\n                                    color: theme === 'dark' ? 'var(--theme-text-muted-dark)' : 'var(--theme-text-muted)'\n                                }}>\n                                    Logged in as:\n                                </small>\n                                <strong>{user.name || user.username || user.email}</strong>\n                            </div>\n                        )}\n                        <button\n                            type=\"button\"\n                            className=\"dropdown_link btn btn-sm btn-outline-danger w-100\"\n                            onClick={handle_logout}\n                            style={{\n                                borderColor: 'var(--theme-danger)',\n                                color: 'var(--theme-danger)'\n                            }}\n                            onMouseEnter={(e) => {\n                                e.target.style.backgroundColor = 'var(--theme-danger)';\n                                e.target.style.color = 'white';\n                            }}\n                            onMouseLeave={(e) => {\n                                e.target.style.backgroundColor = 'transparent';\n                                e.target.style.color = 'var(--theme-danger)';\n                            }}\n                        >\n                            <i className=\"fas fa-sign-out-alt me-2\"></i>Logout\n                        </button>\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default NineDotMenu;","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\n\nconst Breadcrumbs = ({ site_config, current_context, available_contexts }) => {\n    const location = useLocation();\n\n    // Get current context display name\n    const get_context_display_name = () => {\n        if (!current_context || !available_contexts || available_contexts.length === 0) {\n            return 'Home';\n        }\n\n        const context = available_contexts.find(c => c.name === current_context);\n        return context ? context.display : current_context;\n    };\n\n    // Parse the current path into breadcrumb items\n    const get_breadcrumb_items = () => {\n        const path = location.pathname;\n        const items = [];\n\n        // Always start with the context name\n        items.push({\n            label: get_context_display_name(),\n            path: '/',\n            is_last: path === '/'\n        });\n\n        // Add path segments if not on home\n        if (path !== '/') {\n            const segments = path.split('/').filter(Boolean);\n            let accumulated_path = '';\n\n            segments.forEach((segment, index) => {\n                accumulated_path += `/${segment}`;\n                const is_last = index === segments.length - 1;\n\n                // Convert segment to readable format (snake_case to Title Case)\n                const label = segment\n                    .split('_')\n                    .map(word => word.charAt(0).toUpperCase() + word.slice(1))\n                    .join(' ');\n\n                items.push({\n                    label: label,\n                    path: accumulated_path,\n                    is_last: is_last\n                });\n            });\n        }\n\n        return items;\n    };\n\n    const breadcrumb_items = get_breadcrumb_items();\n\n    return (\n        <div className=\"breadcrumbs\">\n            <nav aria-label=\"breadcrumb\">\n                <ol className=\"breadcrumb\">\n                    {breadcrumb_items.map((item, index) => (\n                        <li\n                            key={index}\n                            className={`breadcrumb-item ${item.is_last ? 'active' : ''}`}\n                            aria-current={item.is_last ? 'page' : undefined}\n                        >\n                            {item.is_last ? (\n                                item.label\n                            ) : (\n                                <Link to={item.path}>{item.label}</Link>\n                            )}\n                        </li>\n                    ))}\n                </ol>\n            </nav>\n        </div>\n    );\n};\n\nexport default Breadcrumbs;","import React, { useState, useEffect } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\n\nconst SidebarMenu = ({ menu_items = [], collapsed, onToggleCollapse }) => {\n    const location = useLocation();\n    \n    // Initialize expanded menus from localStorage\n    const [expanded_menus, setExpandedMenus] = useState(() => {\n        const saved = localStorage.getItem('expanded_menus');\n        return saved ? JSON.parse(saved) : {};\n    });\n\n    // Save expanded menus state to localStorage whenever it changes\n    useEffect(() => {\n        localStorage.setItem('expanded_menus', JSON.stringify(expanded_menus));\n    }, [expanded_menus]);\n\n    // Auto-expand active menu sections when location changes\n    useEffect(() => {\n        if (menu_items.length > 0) {\n            auto_expand_active_menus(menu_items);\n        }\n    }, [location.pathname, menu_items]);\n\n    // Auto-expand menu sections that contain the current active route\n    const auto_expand_active_menus = (items) => {\n        const find_and_expand_active = (items, parent_id = null) => {\n            for (const item of items) {\n                if (item.url === location.pathname) {\n                    // Found active item, expand its parent\n                    if (parent_id && !expanded_menus[parent_id]) {\n                        setExpandedMenus(prev => ({\n                            ...prev,\n                            [parent_id]: true\n                        }));\n                    }\n                    return true;\n                }\n\n                if (item.items && item.items.length > 0) {\n                    const found = find_and_expand_active(item.items, item.id);\n                    if (found && !expanded_menus[item.id]) {\n                        setExpandedMenus(prev => ({\n                            ...prev,\n                            [item.id]: true\n                        }));\n                    }\n                }\n            }\n            return false;\n        };\n\n        find_and_expand_active(items);\n    };\n\n    const toggle_menu_expansion = (menu_id) => {\n        setExpandedMenus(prev => ({\n            ...prev,\n            [menu_id]: !prev[menu_id]\n        }));\n    };\n\n    const render_menu_item = (item, depth = 0) => {\n        const has_children = item.items && item.items.length > 0;\n        const is_expanded = expanded_menus[item.id];\n        const is_active = location.pathname === item.url;\n\n        // Check if any child is active\n        const has_active_child = (items) => {\n            return items?.some(child =>\n                child.url === location.pathname ||\n                (child.items && has_active_child(child.items))\n            );\n        };\n\n        const is_parent_of_active = has_children && has_active_child(item.items);\n\n        // Handle tier type items (parent categories)\n        if (item.type === 'tier') {\n            return (\n                <div key={item.id} className=\"sidebar_section\">\n                    <div\n                        className={`sidebar_section_header ${is_parent_of_active ? 'has-active-child' : ''}`}\n                        onClick={() => toggle_menu_expansion(item.id)}\n                        style={{ cursor: 'pointer' }}\n                    >\n                        <h5>\n                            {item.icon && <i className={`fas ${item.icon} me-2`}></i>}\n                            {item.display}\n                            <i className={`fas fa-chevron-${is_expanded ? 'down' : 'right'} float-end`}></i>\n                        </h5>\n                    </div>\n                    {is_expanded && (\n                        <ul className=\"nav flex-column\">\n                            {item.items.map(child => render_menu_item(child, depth + 1))}\n                        </ul>\n                    )}\n                </div>\n            );\n        }\n\n        // Handle link type items\n        if (item.type === 'link') {\n            const is_external = item.url?.startsWith('http://') || item.url?.startsWith('https://');\n\n            return (\n                <li key={item.id} className=\"nav-item\">\n                    {has_children ? (\n                        <>\n                            <button\n                                type=\"button\"\n                                className={`nav-link d-flex justify-content-between align-items-center ${is_active ? 'active' : ''} ${is_parent_of_active ? 'has-active-child' : ''}`}\n                                onClick={(e) => {\n                                    e.preventDefault();\n                                    toggle_menu_expansion(item.id);\n                                }}\n                                style={{\n                                    width: '100%',\n                                    border: 'none',\n                                    background: 'transparent',\n                                    textAlign: 'left',\n                                    padding: 'var(--bs-nav-link-padding-y) var(--bs-nav-link-padding-x)'\n                                }}\n                            >\n                                <span>\n                                    {item.icon && <i className={`fas ${item.icon} me-2`}></i>}\n                                    {item.display}\n                                </span>\n                                <i className={`fas fa-chevron-${is_expanded ? 'down' : 'right'}`}></i>\n                            </button>\n                            {is_expanded && (\n                                <ul className=\"nav flex-column ms-3\">\n                                    {item.items.map(child => render_menu_item(child, depth + 1))}\n                                </ul>\n                            )}\n                        </>\n                    ) : (\n                        is_external ? (\n                            <a\n                                href={item.url}\n                                className={`nav-link ${is_active ? 'active' : ''}`}\n                                target={item.new_tab ? '_blank' : undefined}\n                                rel={item.new_tab ? 'noopener noreferrer' : undefined}\n                            >\n                                {item.icon && <i className={`fas ${item.icon} me-2`}></i>}\n                                {item.display}\n                            </a>\n                        ) : (\n                            <Link\n                                to={item.url}\n                                className={`nav-link ${is_active ? 'active' : ''}`}\n                            >\n                                {item.icon && <i className={`fas ${item.icon} me-2`}></i>}\n                                {item.display}\n                            </Link>\n                        )\n                    )}\n                </li>\n            );\n        }\n\n        return null;\n    };\n\n    return (\n        <div className=\"sidebar_container\">\n            <aside className=\"sidebar\">\n                <div className=\"sidebar_toggle\" onClick={onToggleCollapse}>\n                    <i className=\"fas fa-chevron-left\"></i>\n                </div>\n                <nav className=\"sidebar_nav\">\n                    {menu_items && menu_items.length > 0 ? (\n                        menu_items.map(item => render_menu_item(item))\n                    ) : (\n                        <div className=\"sidebar_section\">\n                            <h5>Navigation</h5>\n                            <ul className=\"nav flex-column\">\n                                <li className=\"nav-item\">\n                                    <Link to=\"/\" className=\"nav-link\">\n                                        <i className=\"fas fa-home me-2\"></i>Dashboard\n                                    </Link>\n                                </li>\n                            </ul>\n                        </div>\n                    )}\n                </nav>\n            </aside>\n        </div>\n    );\n};\n\nexport default SidebarMenu;","import React, { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { useAuth } from '../contexts/AuthContext';\nimport { useSite } from '../contexts/SiteContext';\nimport NineDotMenu from './layout/NineDotMenu';\nimport Breadcrumbs from './layout/Breadcrumbs';\nimport SidebarMenu from './layout/SidebarMenu';\n\nconst DefaultLayout = ({ children }) => {\n    const location = useLocation();\n    const { user, logout } = useAuth();\n    const {\n        current_context,\n        available_contexts,\n        context_loading,\n        site_config,\n        initialize_context,\n        switch_context,\n        fetch_site_config\n    } = useSite();\n\n    const [theme, setTheme] = useState(() => {\n        return localStorage.getItem('theme_preference') || 'light';\n    });\n    const [sidebar_collapsed, setSidebarCollapsed] = useState(false);\n\n    // Initialize context from stored default if needed\n    useEffect(() => {\n        const stored_context = sessionStorage.getItem('current_context');\n        if (stored_context && !current_context) {\n            initialize_context(stored_context);\n        }\n    }, []);\n\n    // Fetch site config when location changes AND we have a context\n    useEffect(() => {\n        if (current_context) {\n            fetch_site_config(location.pathname);\n        }\n    }, [location.pathname, current_context]);\n\n    // Apply theme\n    useEffect(() => {\n        document.documentElement.setAttribute('data-theme', theme);\n        document.documentElement.setAttribute('data-bs-theme', theme);\n        localStorage.setItem('theme_preference', theme);\n    }, [theme]);\n\n    const handle_theme_toggle = () => {\n        setTheme(prev => prev === 'light' ? 'dark' : 'light');\n    };\n\n    const toggle_sidebar = () => {\n        setSidebarCollapsed(!sidebar_collapsed);\n    };\n\n    const handle_logout = () => {\n        logout();\n    };\n\n    if (context_loading || !site_config) {\n        return (\n            <div className=\"d-flex justify-content-center align-items-center min-vh-100\">\n                <div className=\"spinner-border\" role=\"status\">\n                    <span className=\"visually-hidden\">Loading...</span>\n                </div>\n            </div>\n        );\n    }\n\n    const site_data = site_config;\n    const menu_data = { items: site_config?.menu_items || [] };\n\n    return (\n        <div id=\"app-content\">\n            <div className=\"topbar htmx-indicator\"></div>\n\n            <header className=\"header\">\n                <div className=\"header_brand\">\n                    <div className=\"logo_wrapper\">\n                        {theme === 'light' ? (\n                            site_data.logo_desktop && (\n                                <img\n                                    src={site_data.logo_desktop}\n                                    alt={`${site_data.name || 'Site'} logo`}\n                                    className=\"header_logo\"\n                                />\n                            )\n                        ) : (\n                            site_data.logo_desktop_dark && (\n                                <img\n                                    src={site_data.logo_desktop_dark}\n                                    alt={`${site_data.name || 'Site'} logo`}\n                                    className=\"header_logo\"\n                                />\n                            )\n                        )}\n                    </div>\n                    <h1>{site_data.name || 'Dashboard'}</h1>\n                </div>\n\n                <div className=\"header_actions\">\n                    {site_data.maintenance_mode && (\n                        <div className=\"maintenance_indicator me-3\">\n                            <span className=\"badge bg-warning text-dark\">\n                                <i className=\"fas fa-tools me-1\"></i>\n                                Maintenance Mode\n                            </span>\n                        </div>\n                    )}\n\n                    <NineDotMenu\n                        theme={theme}\n                        user={user}\n                        available_contexts={available_contexts || []}\n                        current_context={current_context}\n                        onSwitchContext={switch_context}\n                        onToggleTheme={handle_theme_toggle}\n                        onLogout={logout}\n                    />\n                </div>\n            </header>\n\n            <Breadcrumbs \n                site_config={site_config}\n                current_section={current_context}\n                available_sections={available_contexts}\n            />\n\n            <div className={`content_area ${sidebar_collapsed ? 'collapsed' : ''}`}>\n                <SidebarMenu \n                    menu_items={menu_data.items}\n                    collapsed={sidebar_collapsed}\n                    onToggleCollapse={toggle_sidebar}\n                />\n\n                <div className=\"main_content\" id=\"main-content\">\n                    {children}\n                </div>\n            </div>\n\n            <footer className=\"footer\">\n                <div className=\"footer_content\">\n                    <p>{site_data.footer_text || `© ${new Date().getFullYear()} ${site_data.name || 'Your Company'}. All rights reserved.`}</p>\n                    {site_data.tagline && (\n                        <p className=\"tagline\">{site_data.tagline}</p>\n                    )}\n                </div>\n            </footer>\n        </div>\n    );\n};\n\nexport default DefaultLayout;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","__webpack_require__.j = 247;","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t247: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkreact_app\"] = self[\"webpackChunkreact_app\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [184], () => (__webpack_require__(919)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["root","factory","exports","module","define","amd","self","deferred","config","api","base","endpoints","auth","login","logout","validate","refresh","status","templates","get","routes","resolve","list","data","getUrl","endpoint","params","arguments","length","undefined","url","concat","Object","keys","forEach","key","replace","getAuthHeaders","_document$querySelect","localStorage","getItem","document","querySelector","content","window","appConfig","AuthContext","createContext","useAuth","context","useContext","Error","SiteContext","useSite","_ref","theme","user","available_contexts","current_context","onSwitchContext","onToggleTheme","onLogout","_useState2","useState","is_open","setIsOpen","menu_ref","useRef","useEffect","handle_outside_click","e","current","contains","target","timer","setTimeout","addEventListener","clearTimeout","removeEventListener","console","log","contexts_type","Array","isArray","_typeof","contexts_content","React","className","ref","style","position","onClick","preventDefault","stopPropagation","prev","type","background","border","padding","cursor","fontSize","color","right","top","marginTop","minWidth","backgroundColor","borderRadius","boxShadow","zIndex","show","map","is_active","name","checks","name_match","context_match","context_name","disabled","icon","display","borderColor","opacity","id","checked","onChange","htmlFor","username","email","onMouseEnter","onMouseLeave","site_config","location","useLocation","get_context_display_name","find","c","breadcrumb_items","path","pathname","items","push","label","is_last","segments","split","filter","Boolean","accumulated_path","segment","index","word","charAt","toUpperCase","slice","join","get_breadcrumb_items","item","Link","to","_ref$menu_items","menu_items","onToggleCollapse","collapsed","saved","JSON","parse","expanded_menus","setExpandedMenus","setItem","stringify","auto_expand_active_menus","find_and_expand_active","_step","parent_id","_iterator","_createForOfIteratorHelper","_ret","_loop","value","_objectSpread","_defineProperty","v","s","n","done","err","f","toggle_menu_expansion","menu_id","render_menu_item","depth","has_children","is_expanded","has_active_child","some","child","is_parent_of_active","_item$url","_item$url2","is_external","startsWith","width","textAlign","href","new_tab","rel","children","_useAuth","_useSite","context_loading","initialize_context","switch_context","fetch_site_config","_slicedToArray","setTheme","_useState4","sidebar_collapsed","setSidebarCollapsed","stored_context","sessionStorage","documentElement","setAttribute","role","site_data","menu_data","logo_desktop","src","alt","logo_desktop_dark","maintenance_mode","NineDotMenu","Breadcrumbs","current_section","available_sections","SidebarMenu","footer_text","Date","getFullYear","tagline","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","m","O","result","chunkIds","fn","priority","notFulfilled","Infinity","i","fulfilled","j","every","splice","r","d","definition","o","defineProperty","enumerable","obj","prop","prototype","hasOwnProperty","call","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","bind","__webpack_exports__"],"sourceRoot":""}