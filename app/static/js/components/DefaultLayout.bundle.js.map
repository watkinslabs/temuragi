{"version":3,"file":"components/DefaultLayout.bundle.js","mappings":"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","sources":["webpack://react-app/webpack/universalModuleDefinition","webpack://react-app/webpack/runtime/chunk loaded","webpack://react-app/./src/App.js","webpack://react-app/./src/components/DefaultLayout.js","webpack://react-app/./src/components/layout/SidebarMenu.js","webpack://react-app/./src/components/layout/NineDotMenu.js","webpack://react-app/./src/config/index.js","webpack://react-app/./src/contexts/AuthContext.js","webpack://react-app/./src/contexts/SiteContext.js","webpack://react-app/./src/components/layout/Breadcrumbs.js","webpack://react-app/webpack/bootstrap","webpack://react-app/webpack/runtime/define property getters","webpack://react-app/webpack/runtime/hasOwnProperty shorthand","webpack://react-app/webpack/runtime/runtimeId","webpack://react-app/webpack/runtime/jsonp chunk loading","webpack://react-app/webpack/startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"components/DefaultLayout\"] = factory();\n\telse\n\t\troot[\"components/DefaultLayout\"] = factory();\n})(self, () => {\nreturn ","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// react/src/App.js\nimport React, { useEffect, useState } from 'react';\nimport { AuthProvider, useAuth } from './contexts/AuthContext';\nimport { SiteProvider, useSite } from './contexts/SiteContext';\nimport Login from './components/Login';\nimport DynamicPage from './components/DynamicPage';\nimport LoadingScreen from './components/LoadingScreen';\nimport DefaultLayout from './components/DefaultLayout';\n\n// Navigation context for state-based routing\nconst NavigationContext = React.createContext();\n\nexport const useNavigation = () => {\n    const context = React.useContext(NavigationContext);\n    if (!context) throw new Error('useNavigation must be used within NavigationProvider');\n    return context;\n};\n\n// Protected app wrapper\nconst ProtectedApp = ({ children }) => {\n    const { isAuthenticated, loading } = useAuth();\n\n    if (loading) {\n        return <LoadingScreen />;\n    }\n\n    if (!isAuthenticated) {\n        return <Login />;\n    }\n\n    return children;\n};\n\n// Wire up the auth and site contexts\nconst ContextConnector = ({ children }) => {\n    const { register_clear_site } = useAuth();\n    const { clear_context } = useSite();\n\n    useEffect(() => {\n        // Register the site clear function with auth context\n        register_clear_site(clear_context);\n    }, [register_clear_site, clear_context]);\n\n    return children;\n};\n\n// Main app content - layout stays stable, only content changes\nconst AppContent = () => {\n    const [current_view, setCurrentView] = useState('home');\n    const [view_params, setViewParams] = useState({});\n    const { initialize_context, fetch_site_config, current_context } = useSite();\n\n    // Initialize context and fetch site config on mount\n    useEffect(() => {\n        const init_app = async () => {\n            // First check for stored context\n            const stored_context = sessionStorage.getItem('current_context') || localStorage.getItem('default_context');\n            \n            if (stored_context) {\n                console.log('Initializing with stored context:', stored_context);\n                initialize_context(stored_context);\n            }\n            \n            // Always fetch site config to get menu items and available contexts\n            console.log('Fetching initial site config...');\n            await fetch_site_config('/');\n        };\n        \n        init_app();\n    }, []); // Run only on mount\n\n    // Prevent browser back button from actually navigating\n    useEffect(() => {\n        // Push initial state at current URL\n        window.history.pushState(null, '', window.location.href);\n\n        // Handle browser back button\n        const handle_pop_state = (e) => {\n            // Push state again to prevent actual navigation but keep current URL\n            window.history.pushState(null, '', window.location.href);\n        };\n\n        // Prevent navigation\n        window.addEventListener('popstate', handle_pop_state);\n\n        // Cleanup\n        return () => {\n            window.removeEventListener('popstate', handle_pop_state);\n        };\n    }, []);\n\n    // Navigation function\n    const navigate_to = (view, params = {}) => {\n        console.log('Navigating to:', view, params);\n        setCurrentView(view);\n        setViewParams(params);\n    };\n\n    // Make navigate_to globally available for context switching\n    useEffect(() => {\n        window.navigate_to = navigate_to;\n        return () => {\n            delete window.navigate_to;\n        };\n    }, []);\n\n    const navigation_value = {\n        current_view,\n        view_params,\n        navigate_to\n    };\n\n    return (\n        <NavigationContext.Provider value={navigation_value}>\n            <ProtectedApp>\n                <DefaultLayout>\n                    <DynamicPage />\n                </DefaultLayout>\n            </ProtectedApp>\n        </NavigationContext.Provider>\n    );\n};\n\nconst App = () => {\n    // Don't change the URL - just leave it wherever it was loaded\n    return (\n        <AuthProvider>\n            <SiteProvider>\n                <ContextConnector>\n                    <AppContent />\n                </ContextConnector>\n            </SiteProvider>\n        </AuthProvider>\n    );\n};\n\nexport default App;\nexport { NavigationContext };","import React, { useEffect, useState } from 'react';\nimport { useAuth } from '../contexts/AuthContext';\nimport { useNavigation } from '../App';\nimport NineDotMenu from './layout/NineDotMenu';\nimport Breadcrumbs from './layout/Breadcrumbs';\nimport SidebarMenu from './layout/SidebarMenu';\nimport config from '../config';\n\nconst DefaultLayout = ({ children }) => {\n    const { user, logout } = useAuth();\n    \n    const [theme, setTheme] = useState(() => {\n        return localStorage.getItem('theme_preference') || 'light';\n    });\n    const [sidebar_collapsed, setSidebarCollapsed] = useState(false);\n\n    // Apply theme\n    useEffect(() => {\n        document.documentElement.setAttribute('data-theme', theme);\n        document.documentElement.setAttribute('data-bs-theme', theme);\n        localStorage.setItem('theme_preference', theme);\n    }, [theme]);\n\n    const handle_theme_toggle = () => {\n        setTheme(prev => prev === 'light' ? 'dark' : 'light');\n    };\n\n    const toggle_sidebar = () => {\n        setSidebarCollapsed(!sidebar_collapsed);\n    };\n\n    // Static site info - load once and cache\n    const [static_site_info, setStaticSiteInfo] = useState(() => {\n        const cached = sessionStorage.getItem('static_site_info');\n        return cached ? JSON.parse(cached) : null;\n    });\n\n    // Load site info ONCE on mount\n    useEffect(() => {\n        if (!static_site_info) {\n            config.apiCall(config.getUrl('/site/config'), {\n                method: 'POST',\n                headers: config.getAuthHeaders(),\n                body: JSON.stringify({ path: '/', include_contexts: false })\n            })\n            .then(res => res.json())\n            .then(data => {\n                const info = {\n                    name: data.site.name,\n                    logo_desktop: data.site.logo_desktop,\n                    logo_desktop_dark: data.site.logo_desktop_dark,\n                    footer_text: data.site.footer_text,\n                    tagline: data.site.tagline,\n                    maintenance_mode: data.site.maintenance_mode\n                };\n                setStaticSiteInfo(info);\n                sessionStorage.setItem('static_site_info', JSON.stringify(info));\n            })\n            .catch(error => {\n                console.error('Failed to load site config:', error);\n            });\n        }\n    }, []);\n\n    if (!static_site_info) {\n        return (\n            <div className=\"d-flex justify-content-center align-items-center min-vh-100\">\n                <div className=\"spinner-border\" role=\"status\">\n                    <span className=\"visually-hidden\">Loading...</span>\n                </div>\n            </div>\n        );\n    }\n\n    return (\n        <div id=\"app-content\">\n            <div className=\"topbar htmx-indicator\"></div>\n\n            <header className=\"header\">\n                <div className=\"header_brand\">\n                    <div className=\"logo_wrapper\">\n                        {theme === 'light' ? (\n                            static_site_info.logo_desktop && (\n                                <img\n                                    src={static_site_info.logo_desktop}\n                                    alt={`${static_site_info.name || 'Site'} logo`}\n                                    className=\"header_logo\"\n                                />\n                            )\n                        ) : (\n                            static_site_info.logo_desktop_dark && (\n                                <img\n                                    src={static_site_info.logo_desktop_dark}\n                                    alt={`${static_site_info.name || 'Site'} logo`}\n                                    className=\"header_logo\"\n                                />\n                            )\n                        )}\n                    </div>\n                    <h1>{static_site_info.name || 'Dashboard'}</h1>\n                </div>\n\n                <div className=\"header_actions\">\n                    {static_site_info.maintenance_mode && (\n                        <div className=\"maintenance_indicator me-3\">\n                            <span className=\"badge bg-warning text-dark\">\n                                <i className=\"fas fa-tools me-1\"></i>\n                                Maintenance Mode\n                            </span>\n                        </div>\n                    )}\n\n                    <NineDotMenu\n                        theme={theme}\n                        user={user}\n                        onToggleTheme={handle_theme_toggle}\n                        onLogout={logout}\n                    />\n                </div>\n            </header>\n\n            <Breadcrumbs />\n\n            <div className={`content_area ${sidebar_collapsed ? 'collapsed' : ''}`}>\n                <SidebarMenu\n                    collapsed={sidebar_collapsed}\n                    onToggleCollapse={toggle_sidebar}\n                />\n\n                <div className=\"main_content\" id=\"main-content\">\n                    {children}\n                </div>\n            </div>\n\n            <footer className=\"footer\">\n                <div className=\"footer_content\">\n                    <p>{static_site_info.footer_text || `© ${new Date().getFullYear()} ${static_site_info.name || 'Your Company'}. All rights reserved.`}</p>\n                    {static_site_info.tagline && (\n                        <p className=\"tagline\">{static_site_info.tagline}</p>\n                    )}\n                </div>\n            </footer>\n        </div>\n    );\n};\n\nexport default React.memo(DefaultLayout);","import React, { useState, useEffect } from 'react';\nimport { useNavigation } from '../../App';\nimport { useSite } from '../../contexts/SiteContext';\n\nconst SidebarMenu = ({ collapsed, onToggleCollapse }) => {\n    const { current_view, navigate_to } = useNavigation();\n    const { menu_items = [], current_context } = useSite();\n    \n    // Debug logging\n    useEffect(() => {\n        console.log('SidebarMenu: Current context:', current_context);\n        console.log('SidebarMenu: Menu items:', menu_items);\n    }, [current_context, menu_items]);\n\n    // Initialize expanded menus from localStorage\n    const [expanded_menus, setExpandedMenus] = useState(() => {\n        const saved = localStorage.getItem('expanded_menus');\n        return saved ? JSON.parse(saved) : {};\n    });\n\n    // Save expanded menus state to localStorage whenever it changes\n    useEffect(() => {\n        localStorage.setItem('expanded_menus', JSON.stringify(expanded_menus));\n    }, [expanded_menus]);\n\n    // Auto-expand active menu sections when view changes\n    useEffect(() => {\n        if (menu_items.length > 0) {\n            auto_expand_active_menus(menu_items);\n        }\n    }, [current_view, menu_items]);\n\n    // Convert URL to view name (remove leading slash and handle nested paths)\n    const url_to_view = (url) => {\n        if (!url) return 'home';\n        return url.replace(/^\\//, '') || 'home';\n    };\n\n    // Check if a menu item is active\n    const is_item_active = (item) => {\n        const item_view = url_to_view(item.url);\n        return current_view === item_view;\n    };\n\n    // Auto-expand menu sections that contain the current active view\n    const auto_expand_active_menus = (items) => {\n        const find_and_expand_active = (items, parent_id = null) => {\n            for (const item of items) {\n                if (is_item_active(item)) {\n                    // Found active item, expand its parent\n                    if (parent_id && !expanded_menus[parent_id]) {\n                        setExpandedMenus(prev => ({\n                            ...prev,\n                            [parent_id]: true\n                        }));\n                    }\n                    return true;\n                }\n\n                if (item.items && item.items.length > 0) {\n                    const found = find_and_expand_active(item.items, item.id);\n                    if (found && !expanded_menus[item.id]) {\n                        setExpandedMenus(prev => ({\n                            ...prev,\n                            [item.id]: true\n                        }));\n                    }\n                }\n            }\n            return false;\n        };\n\n        find_and_expand_active(items);\n    };\n\n    const toggle_menu_expansion = (menu_id) => {\n        setExpandedMenus(prev => ({\n            ...prev,\n            [menu_id]: !prev[menu_id]\n        }));\n    };\n\n    const handle_navigation = (url) => {\n        const view = url_to_view(url);\n        navigate_to(view);\n    };\n\n    const render_menu_item = (item, depth = 0) => {\n        const has_children = item.items && item.items.length > 0;\n        const is_expanded = expanded_menus[item.id];\n        const is_active = is_item_active(item);\n\n        // Check if any child is active\n        const has_active_child = (items) => {\n            return items?.some(child =>\n                is_item_active(child) ||\n                (child.items && has_active_child(child.items))\n            );\n        };\n\n        const is_parent_of_active = has_children && has_active_child(item.items);\n        // Handle tier type items (parent categories)\n        if (item.type === 'tier') {\n            return (\n                <div key={item.id} className=\"sidebar_section\">\n                    <div\n                        className={`sidebar_section_header ${is_parent_of_active ? 'has-active-child' : ''}`}\n                        onClick={() => toggle_menu_expansion(item.id)}\n                        style={{ \n                            cursor: 'pointer',\n                            display: 'flex',\n                            justifyContent: 'space-between',\n                            alignItems: 'center'\n                        }}\n                    >\n                        <h5 style={{ margin: 0, display: 'flex', alignItems: 'center' }}>\n                            {item.icon && <i className={`fas ${item.icon} me-2`}></i>}\n                            {item.display}\n                        </h5>\n                        <i className={`fas fa-chevron-${is_expanded ? 'down' : 'right'}`}></i>\n                    </div>\n                    {is_expanded && (\n                        <ul className=\"nav flex-column\">\n                            {item.items.map(child => render_menu_item(child, depth + 1))}\n                        </ul>\n                    )}\n                </div>\n            );\n        }\n\n        // Handle link type items\n        if (item.type === 'link') {\n            const is_external = item.url?.startsWith('http://') || item.url?.startsWith('https://');\n\n            return (\n                <li key={item.id} className=\"nav-item\">\n                    {has_children ? (\n                        <>\n                            <button\n                                type=\"button\"\n                                className={`nav-link d-flex justify-content-between align-items-center ${is_active ? 'active' : ''} ${is_parent_of_active ? 'has-active-child' : ''}`}\n                                onClick={(e) => {\n                                    e.preventDefault();\n                                    toggle_menu_expansion(item.id);\n                                }}\n                                style={{\n                                    width: '100%',\n                                    border: 'none',\n                                    background: 'transparent',\n                                    textAlign: 'left',\n                                    padding: 'var(--bs-nav-link-padding-y) var(--bs-nav-link-padding-x)'\n                                }}\n                            >\n                                <span>\n                                    {item.icon && <i className={`fas ${item.icon} me-2`}></i>}\n                                    {item.display}\n                                </span>\n                                <i className={`fas fa-chevron-${is_expanded ? 'down' : 'right'}`}></i>\n                            </button>\n                            {is_expanded && (\n                                <ul className=\"nav flex-column ms-3\">\n                                    {item.items.map(child => render_menu_item(child, depth + 1))}\n                                </ul>\n                            )}\n                        </>\n                    ) : (\n                        is_external ? (\n                            <a\n                                href={item.url}\n                                className={`nav-link ${is_active ? 'active' : ''}`}\n                                target={item.new_tab ? '_blank' : undefined}\n                                rel={item.new_tab ? 'noopener noreferrer' : undefined}\n                            >\n                                {item.icon && <i className={`fas ${item.icon} me-2`}></i>}\n                                {item.display}\n                            </a>\n                        ) : (\n                            <button\n                                type=\"button\"\n                                className={`nav-link ${is_active ? 'active' : ''}`}\n                                onClick={() => handle_navigation(item.url)}\n                                style={{\n                                    width: '100%',\n                                    border: 'none',\n                                    background: 'transparent',\n                                    textAlign: 'left',\n                                    cursor: 'pointer'\n                                }}\n                            >\n                                {item.icon && <i className={`fas ${item.icon} me-2`}></i>}\n                                {item.display}\n                            </button>\n                        )\n                    )}\n                </li>\n            );\n        }\n\n        return null;\n    };\n\n    return (\n        <div className=\"sidebar_container\">\n            <aside className=\"sidebar\">\n                <div className=\"sidebar_toggle\" onClick={onToggleCollapse}>\n                    <i className=\"fas fa-chevron-left\"></i>\n                </div>\n                <nav className=\"sidebar_nav\">\n                    {menu_items && menu_items.length > 0 ? (\n                        menu_items.map(item => render_menu_item(item))\n                    ) : (\n                        <div className=\"sidebar_section\">\n                            <h5>Navigation</h5>\n                            <ul className=\"nav flex-column\">\n                                <li className=\"nav-item\">\n                                    <button\n                                        type=\"button\"\n                                        className=\"nav-link\"\n                                        onClick={() => navigate_to('home')}\n                                        style={{\n                                            width: '100%',\n                                            border: 'none',\n                                            background: 'transparent',\n                                            textAlign: 'left',\n                                            cursor: 'pointer'\n                                        }}\n                                    >\n                                        <i className=\"fas fa-home me-2\"></i>Dashboard\n                                    </button>\n                                </li>\n                            </ul>\n                        </div>\n                    )}\n                </nav>\n            </aside>\n        </div>\n    );\n};\n\n// Memoize but include menu_items in dependency check\nexport default React.memo(SidebarMenu, (prevProps, nextProps) => {\n    // Re-render if collapsed state changes\n    return prevProps.collapsed === nextProps.collapsed;\n});","import React, { useState, useEffect, useRef } from 'react';\nimport { useSite } from '../../contexts/SiteContext';\n\nconst NineDotMenu = ({\n    theme,\n    user,\n    onToggleTheme,\n    onLogout\n}) => {\n    const [is_open, setIsOpen] = useState(false);\n    const menu_ref = useRef(null);\n    \n    // Get context data directly\n    const { current_context, available_contexts, switch_context } = useSite();\n\n    // Handle outside clicks\n    useEffect(() => {\n        if (!is_open) return;\n\n        const handle_outside_click = (e) => {\n            if (menu_ref.current && !menu_ref.current.contains(e.target)) {\n                setIsOpen(false);\n            }\n        };\n\n        // Add delay to prevent immediate trigger\n        const timer = setTimeout(() => {\n            document.addEventListener('click', handle_outside_click);\n        }, 100);\n\n        return () => {\n            clearTimeout(timer);\n            document.removeEventListener('click', handle_outside_click);\n        };\n    }, [is_open]);\n\n    const handle_context_switch = (context_name) => {\n        switch_context(context_name);\n        setIsOpen(false);\n    };\n\n    const handle_theme_toggle = () => {\n        onToggleTheme();\n    };\n\n    const handle_logout = (e) => {\n        e.preventDefault();\n        onLogout();\n        setIsOpen(false);\n    };\n\n    // Debug current state\n    useEffect(() => {\n        console.log('NineDotMenu state:', {\n            current_context,\n            available_contexts,\n            user,\n            contexts_type: Array.isArray(available_contexts) ? 'array' : typeof available_contexts,\n            contexts_content: available_contexts\n        });\n    }, [current_context, available_contexts, user]);\n\n    return (\n        <div className=\"nine_dot_menu\" ref={menu_ref} style={{ position: 'relative' }}>\n            <button\n                className=\"nine_dot_btn\"\n                onClick={(e) => {\n                    e.preventDefault();\n                    e.stopPropagation();\n                    setIsOpen(prev => !prev);\n                }}\n                type=\"button\"\n                style={{\n                    background: 'none',\n                    border: 'none',\n                    padding: '8px',\n                    cursor: 'pointer',\n                    fontSize: '20px',\n                    color: 'inherit'\n                }}\n                aria-label=\"Settings menu\"\n                aria-expanded={is_open}\n            >\n                <i className=\"fas fa-th\"></i>\n            </button>\n\n            {is_open && (\n                <div\n                    className=\"nine_dot_dropdown\"\n                    style={{\n                        position: 'absolute',\n                        right: 0,\n                        top: '100%',\n                        marginTop: '8px',\n                        minWidth: '250px',\n                        backgroundColor: theme === 'dark' ? 'var(--theme-surface-dark)' : 'var(--theme-surface)',\n                        border: `1px solid ${theme === 'dark' ? 'var(--theme-border-color-dark)' : 'var(--theme-border-color)'}`,\n                        borderRadius: 'var(--theme-card-border-radius)',\n                        boxShadow: 'var(--theme-shadow-lg)',\n                        zIndex: 1000,\n                        padding: '16px',\n                        color: theme === 'dark' ? 'var(--theme-text-dark)' : 'var(--theme-text)'\n                    }}\n                >\n                    {/* Context Switcher */}\n                    {console.log('Contexts check:', {\n                        available_contexts,\n                        length: available_contexts?.length,\n                        show: available_contexts && available_contexts.length > 1\n                    })}\n                    {available_contexts && available_contexts.length > 0 && (\n                        <>\n                            <div className=\"dropdown_section mb-3\">\n                                <h6 className=\"mb-2\" style={{\n                                    color: theme === 'dark' ? 'var(--theme-text-muted-dark)' : 'var(--theme-text-muted)'\n                                }}>\n                                    Application Switcher\n                                </h6>\n                                <div className=\"context_switcher\">\n                                    {available_contexts.map(context => {\n                                        // Compare using the ID field since that's what the server expects\n                                        const is_active = current_context === context.name ||\n                                                         // Also check if current_context matches the context field\n                                                         (context.context && current_context === context.context);\n\n                                        // Debug logging\n                                        console.log('Context comparison:', {\n                                            context,\n                                            current_context,\n                                            is_active,\n                                            checks: {\n                                                name_match: current_context === context.name,\n                                                context_match: context.context && current_context === context.context\n                                            }\n                                        });\n\n                                        return (\n                                            <button\n                                                key={context.name}\n                                                type=\"button\"\n                                                className={`btn btn-sm w-100 mb-2 ${\n                                                    is_active\n                                                        ? 'btn-primary'\n                                                        : 'btn-outline-secondary'\n                                                }`}\n                                                onClick={() => handle_context_switch(context.name)}\n                                                disabled={is_active}\n                                            >\n                                                {context.icon && <i className={`${context.icon} me-2`}></i>}\n                                                {context.display || context.name}\n                                            </button>\n                                        );\n                                    })}\n                                </div>\n                            </div>\n\n                        </>\n                    )}\n\n                    {/* Theme Toggle */}\n                    <div className=\"dropdown_section mb-3\">\n                        <div className=\"theme_toggle d-flex align-items-center\">\n                            <div className=\"form-check form-switch\">\n                                <input\n                                    className=\"form-check-input\"\n                                    type=\"checkbox\"\n                                    id=\"dark_mode_toggle\"\n                                    checked={theme === 'dark'}\n                                    onChange={handle_theme_toggle}\n                                />\n                                <label className=\"form-check-label ms-2\" htmlFor=\"dark_mode_toggle\">\n                                    Dark Mode\n                                </label>\n                            </div>\n                        </div>\n                    </div>\n\n\n                    {/* Account Section */}\n                    <div className=\"dropdown_section\">\n                        {user && (\n                            <div className=\"user_info mb-3 p-2 rounded\" style={{\n                                backgroundColor: theme === 'dark' ? 'var(--theme-background-dark)' : 'var(--theme-component)',\n                                border: `1px solid ${theme === 'dark' ? 'var(--theme-border-color-dark)' : 'var(--theme-border-color)'}`\n                            }}>\n                                <small className=\"d-block\" style={{\n                                    color: theme === 'dark' ? 'var(--theme-text-muted-dark)' : 'var(--theme-text-muted)'\n                                }}>\n                                    Logged in as:\n                                </small>\n                                <strong>{user.name || user.username || user.email}</strong>\n                            </div>\n                        )}\n                        <button\n                            type=\"button\"\n                            className=\"dropdown_link btn btn-sm btn-outline-danger w-100\"\n                            onClick={handle_logout}\n                            style={{\n                                borderColor: 'var(--theme-danger)',\n                                color: 'var(--theme-danger)'\n                            }}\n                            onMouseEnter={(e) => {\n                                e.target.style.backgroundColor = 'var(--theme-danger)';\n                                e.target.style.color = 'white';\n                            }}\n                            onMouseLeave={(e) => {\n                                e.target.style.backgroundColor = 'transparent';\n                                e.target.style.color = 'var(--theme-danger)';\n                            }}\n                        >\n                            <i className=\"fas fa-sign-out-alt me-2\"></i>Logout\n                        </button>\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default NineDotMenu;","// react/src/config/index.js\nconst config = {\n    api: {\n        base: '/v2/api',\n        endpoints: {\n            // Auth endpoints\n            auth: {\n                login: '/auth/login',\n                logout: '/auth/logout',\n                validate: '/auth/validate',\n                refresh: '/auth/refresh',\n                status: '/auth/status'\n            },\n            // Template endpoints\n            templates: {\n                get: '/templates/:slug'\n            },\n            // Route resolution\n            routes: {\n                resolve: '/routes/resolve',\n                list: '/routes'\n            },\n            // Data endpoint\n            data: '/data'\n        }\n    },\n\n    // Build full URL from endpoint\n    getUrl: (endpoint, params = {}) => {\n        let url = `${config.api.base}${endpoint}`;\n\n        // Replace URL parameters like :name\n        Object.keys(params).forEach(key => {\n            url = url.replace(`:${key}`, params[key]);\n        });\n\n        return url;\n    },\n\n    // Wrap fetch to check for CSRF invalid\n    apiCall: async (url, options = {}) => {\n        const response = await fetch(url, options);\n        \n        // Check for CSRF invalid\n        if (!response.ok) {\n            const content_type = response.headers.get('content-type');\n            if (content_type && content_type.includes('application/json')) {\n                const data = await response.json();\n                \n                if (data.success === false && data.csrf_invalid === true) {\n                    console.log('CSRF invalid - clearing auth and reloading');\n                    \n                    // Clear everything\n                    localStorage.removeItem('api_token');\n                    localStorage.removeItem('refresh_token');\n                    localStorage.removeItem('user_id');\n                    localStorage.removeItem('user_info');\n                    localStorage.removeItem('default_context');\n                    sessionStorage.clear();\n                    \n                    // Just reload the page - the app will show login since auth is cleared\n                    window.location.reload();\n                    \n                    // Return the response anyway\n                    return response;\n                }\n                \n                // Re-create response since we consumed it\n                return new Response(JSON.stringify(data), {\n                    status: response.status,\n                    statusText: response.statusText,\n                    headers: response.headers\n                });\n            }\n        }\n        \n        return response;\n    },\n\n    // Get auth headers\n    getAuthHeaders: () => ({\n        'Authorization': `Bearer ${localStorage.getItem('api_token') || ''}`,\n        'X-CSRF-Token': document.querySelector('meta[name=\"csrf-token\"]')?.content || '',\n        'Content-Type': 'application/json'\n    })\n};\n\n// Make it available globally if needed\nwindow.appConfig = config;\n\nexport default config;","// react/src/contexts/AuthContext.js\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport config from '../config';\n\nconst AuthContext = createContext(null);\n\nexport const useAuth = () => {\n    const context = useContext(AuthContext);\n    if (!context) throw new Error('useAuth must be used within AuthProvider');\n    return context;\n};\n\nexport const AuthProvider = ({ children }) => {\n    const [isAuthenticated, setIsAuthenticated] = useState(false);\n    const [loading, setLoading] = useState(true);\n    const [user, setUser] = useState(null);\n\n    // We'll need to access SiteContext's clear_section\n    const [clear_site_callback, setClearSiteCallback] = useState(null);\n\n    // Allow SiteProvider to register its clear function\n    const register_clear_site = (callback) => {\n        setClearSiteCallback(() => callback);\n    };\n\n    // Check if we have valid tokens on mount\n    useEffect(() => {\n        checkAuth();\n    }, []);\n\n    const checkAuth = async () => {\n        const api_token = localStorage.getItem('api_token');\n        const refresh_token = localStorage.getItem('refresh_token');\n\n        if (!api_token || !refresh_token) {\n            setLoading(false);\n            return;\n        }\n\n        try {\n            // First try to validate the current token\n            const response = await config.apiCall(config.getUrl(config.api.endpoints.auth.validate), {\n                method: 'POST',\n                headers: {\n                    'Authorization': `Bearer ${api_token}`,\n                    'Content-Type': 'application/json',\n                    'X-CSRF-Token': document.querySelector('meta[name=\"csrf-token\"]')?.content || ''\n                }\n            });\n\n            if (response.ok) {\n                const data = await response.json();\n                setIsAuthenticated(true);\n                setUser(data.user_info);\n\n                // Set up periodic token validation\n                start_token_check_interval();\n            } else if (response.status === 401) {\n                // Token is invalid, try to refresh\n                const refresh_success = await refreshToken();\n                if (refresh_success) {\n                    // Retry validation after refresh\n                    await checkAuth();\n                } else {\n                    // Refresh failed, clear auth\n                    clearAuth();\n                }\n            } else {\n                // Other error, clear auth\n                clearAuth();\n            }\n        } catch (error) {\n            console.error('Auth check failed:', error);\n            clearAuth();\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const login = async (username, password, remember) => {\n        try {\n            const response = await config.apiCall(config.getUrl(config.api.endpoints.auth.login), {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'X-CSRF-Token': document.querySelector('meta[name=\"csrf-token\"]')?.content || ''\n                },\n                body: JSON.stringify({ username, password, remember })\n            });\n\n            if (response.ok) {\n                const data = await response.json();\n\n                // Store tokens\n                localStorage.setItem('api_token', data.api_token);\n                localStorage.setItem('refresh_token', data.refresh_token);\n                localStorage.setItem('user_id', data.user_id);\n                localStorage.setItem('user_info', JSON.stringify(data.user_info));\n\n                // Store the ACTUAL default context from login\n                if (data.default_context) {\n                    localStorage.setItem('default_context', data.default_context);\n                    sessionStorage.setItem('current_context', data.default_context);\n                    sessionStorage.setItem('current_section', data.default_context); // Also store as section for compatibility\n                }\n\n                // Handle remember me\n                if (remember) {\n                    localStorage.setItem('remembered_username', username);\n                } else {\n                    localStorage.removeItem('remembered_username');\n                }\n\n                setIsAuthenticated(true);\n                setUser(data.user_info);\n\n                // Start token check interval after successful login\n                start_token_check_interval();\n\n                return {\n                    success: true,\n                    landing_page: data.landing_page || '/',\n                    default_context: data.default_context\n                };\n            } else {\n                const error_data = await response.json();\n                return {\n                    success: false,\n                    message: error_data.message || 'Login failed'\n                };\n            }\n        } catch (error) {\n            console.error('Login error:', error);\n            return { success: false, message: 'Login failed' };\n        }\n    };\n\n    const refreshToken = async () => {\n        const refresh_token = localStorage.getItem('refresh_token');\n        if (!refresh_token) {\n            clearAuth();\n            return false;\n        }\n\n        try {\n            const response = await config.apiCall(config.getUrl(config.api.endpoints.auth.refresh), {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'X-CSRF-Token': document.querySelector('meta[name=\"csrf-token\"]')?.content || ''\n                },\n                body: JSON.stringify({ refresh_token })\n            });\n\n            if (response.ok) {\n                const data = await response.json();\n                localStorage.setItem('api_token', data.api_token);\n\n                // Update user info if provided\n                if (data.user_info) {\n                    localStorage.setItem('user_info', JSON.stringify(data.user_info));\n                    setUser(data.user_info);\n                }\n\n                setIsAuthenticated(true);\n                return true;\n            } else {\n                // Refresh token is also invalid\n                console.log('Refresh token invalid, logging out');\n                clearAuth();\n                return false;\n            }\n        } catch (error) {\n            console.error('Token refresh failed:', error);\n            clearAuth();\n            return false;\n        }\n    };\n\n    const logout = () => {\n        clearAuth();\n        // Clear site context if callback is registered\n        if (clear_site_callback) {\n            clear_site_callback();\n        }\n    };\n\n    const clearAuth = () => {\n        // Clear all auth data\n        localStorage.removeItem('api_token');\n        localStorage.removeItem('refresh_token');\n        localStorage.removeItem('user_id');\n        localStorage.removeItem('user_info');\n        localStorage.removeItem('default_context');  // Changed from default_section\n\n        // Clear state\n        setIsAuthenticated(false);\n        setUser(null);\n\n        // Stop token check interval\n        stop_token_check_interval();\n    };\n\n    // Periodic token validation\n    let token_check_interval = null;\n\n    const start_token_check_interval = () => {\n        // Clear any existing interval\n        stop_token_check_interval();\n\n        // Check token every 5 minutes\n        token_check_interval = setInterval(async () => {\n            const api_token = localStorage.getItem('api_token');\n            if (!api_token) {\n                clearAuth();\n                return;\n            }\n\n            try {\n                const response = await config.apiCall(config.getUrl(config.api.endpoints.auth.validate), {\n                    method: 'POST',\n                    headers: {\n                        'Authorization': `Bearer ${api_token}`,\n                        'Content-Type': 'application/json',\n                        'X-CSRF-Token': document.querySelector('meta[name=\"csrf-token\"]')?.content || ''\n                    }\n                });\n\n                if (!response.ok) {\n                    if (response.status === 401) {\n                        // Try to refresh\n                        const refresh_success = await refreshToken();\n                        if (!refresh_success) {\n                            // Refresh failed, clear auth but don't redirect here\n                            // Let the ProtectedRoute component handle navigation\n                            clearAuth();\n                        }\n                    }\n                }\n            } catch (error) {\n                console.error('Token validation error:', error);\n            }\n        }, 5 * 60 * 1000); // 5 minutes\n    };\n\n    const stop_token_check_interval = () => {\n        if (token_check_interval) {\n            clearInterval(token_check_interval);\n            token_check_interval = null;\n        }\n    };\n\n    // Clean up interval on unmount\n    useEffect(() => {\n        return () => {\n            stop_token_check_interval();\n        };\n    }, []);\n\n    // Set up global auth headers helper\n    useEffect(() => {\n        if (!window.app) window.app = {};\n\n        window.app.getAuthHeaders = () => {\n            const token = localStorage.getItem('api_token');\n            return {\n                'Authorization': token ? `Bearer ${token}` : '',\n                'X-CSRF-Token': document.querySelector('meta[name=\"csrf-token\"]')?.content || ''\n            };\n        };\n\n        // Add global request interceptor for 401 responses\n        const original_fetch = window.fetch;\n        window.fetch = async (...args) => {\n            const response = await original_fetch(...args);\n\n            // If we get a 401 and we're not already on the login page\n            if (response.status === 401 && !window.location.pathname.includes('/login')) {\n                const url = typeof args[0] === 'string' ? args[0] : args[0].url;\n\n                // Don't intercept auth endpoints\n                if (!url.includes('/auth/')) {\n                    // Try to refresh token\n                    const refresh_success = await refreshToken();\n                    if (refresh_success) {\n                        // Retry the original request with new token\n                        if (args[1] && args[1].headers) {\n                            args[1].headers['Authorization'] = `Bearer ${localStorage.getItem('api_token')}`;\n                        }\n                        return original_fetch(...args);\n                    } else {\n                        // Refresh failed, clear auth\n                        clearAuth();\n                    }\n                }\n            }\n\n            return response;\n        };\n\n        // Restore original fetch on cleanup\n        return () => {\n            window.fetch = original_fetch;\n        };\n    }, []);\n\n    return (\n        <AuthContext.Provider value={{\n            isAuthenticated,\n            loading,\n            user,\n            login,\n            logout,\n            refreshToken,\n            checkAuth,\n            register_clear_site\n        }}>\n            {children}\n        </AuthContext.Provider>\n    );\n};","// react/src/contexts/SiteContext.js\nimport React, { createContext, useState, useContext, useRef, useCallback, useEffect } from 'react';\nimport config from '../config';\n\nconst SiteContext = createContext(null);\n\nexport const useSite = () => {\n    const context = useContext(SiteContext);\n    if (!context) throw new Error('useSite must be used within SiteProvider');\n    return context;\n};\n\nexport const SiteProvider = ({ children }) => {\n    const [current_context, setCurrentContext] = useState(() => {\n        // Check session storage for current session's context\n        return sessionStorage.getItem('current_context') || null;\n    });\n\n    const [available_contexts, setAvailableContexts] = useState([]);\n    const [context_loading, setContextLoading] = useState(false);\n\n    // Separate state for different parts of site config\n    const [site_info, setSiteInfo] = useState(null); // Name, logo, footer - doesn't change\n    const [menu_items, setMenuItems] = useState([]); // Menu - changes per context\n\n    // Track what we're currently fetching to prevent duplicate requests\n    const fetching_context = useRef(null);\n    const has_initial_fetch = useRef(false);\n\n    // Initialize default context from login\n    const initialize_context = (default_context) => {\n        console.log('SiteContext: Initializing context:', default_context);\n        if (default_context) {\n            setCurrentContext(default_context);\n            sessionStorage.setItem('current_context', default_context);\n        }\n    };\n\n    // Get the current context, with fallback to default\n    const get_current_context = () => {\n        const context = current_context || sessionStorage.getItem('current_context') || localStorage.getItem('default_context') || 'default';\n        console.log('SiteContext: Getting current context:', context);\n        return context;\n    };\n\n    const fetch_site_config = useCallback(async (path = '/') => {\n        const context = get_current_context();\n        console.log('SiteContext: Fetching config for context:', context, 'path:', path);\n\n        // Don't fetch if we're already fetching the same context\n        if (fetching_context.current === context && has_initial_fetch.current) {\n            console.log('SiteContext: Already fetching this context, skipping');\n            return;\n        }\n\n        fetching_context.current = context;\n        setContextLoading(true);\n\n        try {\n            const request_body = {\n                path: path,\n                context: context,\n                include_contexts: true\n            };\n\n            console.log('SiteContext: Making API call with body:', request_body);\n\n            const response = await config.apiCall(config.getUrl('/site/config'), {\n                method: 'POST',\n                headers: config.getAuthHeaders(),\n                body: JSON.stringify(request_body)\n            });\n\n            if (response.ok) {\n                const data = await response.json();\n                console.log('SiteContext: Received site config:', data);\n\n                // Always set site info\n                setSiteInfo({\n                    name: data.site.name,\n                    logo_desktop: data.site.logo_desktop,\n                    logo_desktop_dark: data.site.logo_desktop_dark,\n                    footer_text: data.site.footer_text,\n                    tagline: data.site.tagline,\n                    maintenance_mode: data.site.maintenance_mode\n                });\n\n                // Always update menu items (they change per context)\n                console.log('SiteContext: Setting menu items:', data.menu?.items);\n                setMenuItems(data.menu?.items || []);\n\n                if (data.contexts) {\n                    console.log('SiteContext: Setting available contexts:', data.contexts);\n                    setAvailableContexts(data.contexts);\n                }\n\n                // Update current context if server says it's different\n                if (data.current_context && data.current_context !== context) {\n                    console.log('SiteContext: Server returned different context:', data.current_context);\n                    setCurrentContext(data.current_context);\n                    sessionStorage.setItem('current_context', data.current_context);\n                }\n\n                has_initial_fetch.current = true;\n            } else {\n                console.error('SiteContext: Failed to fetch site config:', response.status);\n            }\n        } catch (error) {\n            console.error('SiteContext: Site config fetch error:', error);\n        } finally {\n            setContextLoading(false);\n            fetching_context.current = null;\n        }\n    }, [current_context]);\n\n    // Context switch - fetch new menu items\n    const switch_context = async (context_name) => {\n        console.log('SiteContext: Switching context from', current_context, 'to', context_name);\n\n        // Don't switch if it's the same context\n        if (context_name === current_context) {\n            console.log('SiteContext: Same context, not switching');\n            return;\n        }\n\n        // Update the context immediately\n        setCurrentContext(context_name);\n        sessionStorage.setItem('current_context', context_name);\n\n        // Clear main content by navigating to home\n        if (window.navigate_to) {\n            window.navigate_to('home');\n        }\n\n        // Fetch new menu items for this context\n        setContextLoading(true);\n\n        try {\n            const request_body = {\n                path: '/',\n                context: context_name,\n                include_contexts: false // Don't need contexts again\n            };\n\n            console.log('SiteContext: Fetching menu for new context:', request_body);\n\n            const response = await config.apiCall(config.getUrl('/site/config'), {\n                method: 'POST',\n                headers: config.getAuthHeaders(),\n                body: JSON.stringify(request_body)\n            });\n\n            if (response.ok) {\n                const data = await response.json();\n                console.log('SiteContext: Received menu items for new context:', data.menu?.items);\n\n                // Update menu items\n                setMenuItems(data.menu?.items || []);\n\n                // If server returned different context, update it\n                if (data.current_context && data.current_context !== context_name) {\n                    console.log('SiteContext: Server corrected context to:', data.current_context);\n                    setCurrentContext(data.current_context);\n                    sessionStorage.setItem('current_context', data.current_context);\n                }\n            }\n        } catch (error) {\n            console.error('SiteContext: Context switch error:', error);\n        } finally {\n            setContextLoading(false);\n        }\n    };\n\n    // Clear context data on logout\n    const clear_context = () => {\n        console.log('SiteContext: Clearing all context data');\n        setCurrentContext(null);\n        setAvailableContexts([]);\n        setSiteInfo(null);\n        setMenuItems([]);\n        sessionStorage.removeItem('current_context');\n        has_initial_fetch.current = false;\n    };\n\n    // Debug log state changes\n    useEffect(() => {\n        console.log('SiteContext state updated:', {\n            current_context,\n            available_contexts: available_contexts.length,\n            menu_items: menu_items.length,\n            site_info: !!site_info\n        });\n    }, [current_context, available_contexts, menu_items, site_info]);\n\n    // Provide combined site_config for backward compatibility\n    const site_config = site_info ? {\n        ...site_info,\n        menu_items,\n        contexts: available_contexts,\n        current_context\n    } : null;\n\n    return (\n        <SiteContext.Provider value={{\n            current_context,\n            available_contexts,\n            context_loading,\n            site_config,\n            site_info,\n            menu_items,\n            setAvailableContexts,\n            setContextLoading,\n            initialize_context,\n            switch_context,\n            clear_context,\n            get_current_context,\n            fetch_site_config\n        }}>\n            {children}\n        </SiteContext.Provider>\n    );\n};","import React from 'react';\nimport { useNavigation } from '../../App';\nimport { useSite } from '../../contexts/SiteContext';\n\nconst Breadcrumbs = () => {\n    const { current_view, navigate_to } = useNavigation();\n    const { site_info, current_context, available_contexts } = useSite();\n\n    // Get current context display name\n    const get_context_display_name = () => {\n        if (!current_context || !available_contexts || available_contexts.length === 0) {\n            return 'Home';\n        }\n\n        const context = available_contexts.find(c => c.name === current_context);\n        return context ? context.display : current_context;\n    };\n\n    // Parse the current view into breadcrumb items\n    const get_breadcrumb_items = () => {\n        const items = [];\n\n        // Always start with the context name\n        items.push({\n            label: get_context_display_name(),\n            view: 'home',\n            is_last: current_view === 'home'\n        });\n\n        // Add view segments if not on home\n        if (current_view !== 'home') {\n            // Convert view name to readable format (snake_case to Title Case)\n            const label = current_view\n                .split('_')\n                .map(word => word.charAt(0).toUpperCase() + word.slice(1))\n                .join(' ');\n\n            items.push({\n                label: label,\n                view: current_view,\n                is_last: true\n            });\n        }\n\n        return items;\n    };\n\n    const breadcrumb_items = get_breadcrumb_items();\n\n    return (\n        <div className=\"breadcrumbs\">\n            <nav aria-label=\"breadcrumb\">\n                <ol className=\"breadcrumb\">\n                    {breadcrumb_items.map((item, index) => (\n                        <li\n                            key={index}\n                            className={`breadcrumb-item ${item.is_last ? 'active' : ''}`}\n                            aria-current={item.is_last ? 'page' : undefined}\n                        >\n                            {item.is_last ? (\n                                item.label\n                            ) : (\n                                <button\n                                    onClick={() => navigate_to(item.view)}\n                                    style={{\n                                        background: 'none',\n                                        border: 'none',\n                                        color: 'var(--bs-link-color)',\n                                        cursor: 'pointer',\n                                        padding: 0,\n                                        textDecoration: 'underline'\n                                    }}\n                                >\n                                    {item.label}\n                                </button>\n                            )}\n                        </li>\n                    ))}\n                </ol>\n            </nav>\n        </div>\n    );\n};\n\nexport default Breadcrumbs;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","__webpack_require__.j = 247;","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t247: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkreact_app\"] = self[\"webpackChunkreact_app\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [184], () => (__webpack_require__(196)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["root","factory","exports","module","define","amd","self","deferred","NavigationContext","React","useNavigation","context","Error","DefaultLayout","_ref","children","_useAuth","useAuth","user","logout","_useState2","_slicedToArray","useState","localStorage","getItem","theme","setTheme","_useState4","sidebar_collapsed","setSidebarCollapsed","useEffect","document","documentElement","setAttribute","setItem","_useState6","cached","sessionStorage","JSON","parse","static_site_info","setStaticSiteInfo","config","apiCall","getUrl","method","headers","getAuthHeaders","body","stringify","path","include_contexts","then","res","json","data","info","name","site","logo_desktop","logo_desktop_dark","footer_text","tagline","maintenance_mode","error","console","id","className","src","alt","concat","NineDotMenu","onToggleTheme","prev","onLogout","Breadcrumbs","SidebarMenu","collapsed","onToggleCollapse","Date","getFullYear","role","_useNavigation","current_view","navigate_to","_useSite","useSite","_useSite$menu_items","menu_items","current_context","log","saved","expanded_menus","setExpandedMenus","length","auto_expand_active_menus","url_to_view","url","replace","is_item_active","item","item_view","items","find_and_expand_active","_step","parent_id","arguments","undefined","_iterator","_createForOfIteratorHelper","_ret","_loop","value","_objectSpread","_defineProperty","v","s","n","done","err","e","f","toggle_menu_expansion","menu_id","render_menu_item","depth","has_children","is_expanded","is_active","has_active_child","some","child","is_parent_of_active","type","key","onClick","style","cursor","display","justifyContent","alignItems","margin","icon","map","_item$url","_item$url2","is_external","startsWith","preventDefault","width","border","background","textAlign","padding","href","target","new_tab","rel","view","prevProps","nextProps","is_open","setIsOpen","menu_ref","useRef","available_contexts","switch_context","handle_outside_click","current","contains","timer","setTimeout","addEventListener","clearTimeout","removeEventListener","contexts_type","Array","isArray","_typeof","contexts_content","ref","position","stopPropagation","fontSize","color","right","top","marginTop","minWidth","backgroundColor","borderRadius","boxShadow","zIndex","show","checks","name_match","context_match","context_name","disabled","checked","onChange","htmlFor","username","email","borderColor","onMouseEnter","onMouseLeave","t","r","Symbol","iterator","o","toStringTag","i","c","prototype","Generator","u","Object","create","_regeneratorDefine2","p","y","G","a","d","bind","l","TypeError","call","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","setPrototypeOf","__proto__","displayName","_regenerator","w","m","defineProperty","enumerable","configurable","writable","_invoke","asyncGeneratorStep","Promise","resolve","_apiCall","api","base","endpoints","auth","login","validate","refresh","status","templates","get","routes","list","endpoint","params","keys","forEach","_callee","options","response","content_type","_args","_context","fetch","ok","includes","success","csrf_invalid","removeItem","clear","window","location","reload","Response","statusText","apply","_next","_throw","_x","_document$querySelect","querySelector","content","appConfig","AuthContext","createContext","useContext","SiteContext","site_info","get_context_display_name","find","breadcrumb_items","push","label","is_last","split","word","charAt","toUpperCase","slice","join","get_breadcrumb_items","index","textDecoration","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","every","splice","definition","obj","prop","hasOwnProperty","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","__webpack_exports__"],"sourceRoot":""}