{"version":3,"file":"components/AppShell.bundle.js","mappings":"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","sources":["webpack://react-app/webpack/universalModuleDefinition","webpack://react-app/webpack/runtime/chunk loaded","webpack://react-app/./src/App.js","webpack://react-app/./src/components/layout/SidebarMenu.js","webpack://react-app/./src/components/layout/NineDotMenu.js","webpack://react-app/./src/config/index.js","webpack://react-app/./src/contexts/AuthContext.js","webpack://react-app/./src/contexts/SiteContext.js","webpack://react-app/./src/components/layout/Breadcrumbs.js","webpack://react-app/./src/components/AppShell.js","webpack://react-app/webpack/bootstrap","webpack://react-app/webpack/runtime/define property getters","webpack://react-app/webpack/runtime/hasOwnProperty shorthand","webpack://react-app/webpack/runtime/runtimeId","webpack://react-app/webpack/runtime/jsonp chunk loading","webpack://react-app/webpack/startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"components/AppShell\"] = factory();\n\telse\n\t\troot[\"components/AppShell\"] = factory();\n})(self, () => {\nreturn ","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// react/src/App.js\nimport React, { useEffect, useState } from 'react';\nimport { AuthProvider, useAuth } from './contexts/AuthContext';\nimport { SiteProvider, useSite } from './contexts/SiteContext';\nimport Login from './components/Login';\nimport DynamicPage from './components/DynamicPage';\nimport LoadingScreen from './components/LoadingScreen';\nimport DefaultLayout from './components/DefaultLayout';\n\n// Navigation context for state-based routing\nconst NavigationContext = React.createContext();\n\nexport const useNavigation = () => {\n    const context = React.useContext(NavigationContext);\n    if (!context) throw new Error('useNavigation must be used within NavigationProvider');\n    return context;\n};\n\n// Protected app wrapper\nconst ProtectedApp = ({ children }) => {\n    const { isAuthenticated, loading } = useAuth();\n\n    if (loading) {\n        return <LoadingScreen />;\n    }\n\n    if (!isAuthenticated) {\n        return <Login />;\n    }\n\n    return children;\n};\n\n// Wire up the auth and site contexts\nconst ContextConnector = ({ children }) => {\n    const { register_clear_site } = useAuth();\n    const { clear_context } = useSite();\n\n    useEffect(() => {\n        // Register the site clear function with auth context\n        register_clear_site(clear_context);\n    }, [register_clear_site, clear_context]);\n\n    return children;\n};\n\n// Main app content - layout stays stable, only content changes\nconst AppContent = () => {\n    const [current_view, setCurrentView] = useState('home');\n    const [view_params, setViewParams] = useState({});\n    const { initialize_context, fetch_site_config, current_context } = useSite();\n\n    // Initialize context and fetch site config on mount\n    useEffect(() => {\n        const init_app = async () => {\n            // First check for stored context\n            const stored_context = sessionStorage.getItem('current_context') || localStorage.getItem('default_context');\n            \n            if (stored_context) {\n                console.log('Initializing with stored context:', stored_context);\n                initialize_context(stored_context);\n            }\n            \n            // Always fetch site config to get menu items and available contexts\n            console.log('Fetching initial site config...');\n            await fetch_site_config('/');\n        };\n        \n        init_app();\n    }, []); // Run only on mount\n\n    // Prevent browser back button from actually navigating\n    useEffect(() => {\n        // Push initial state at current URL\n        window.history.pushState(null, '', window.location.href);\n\n        // Handle browser back button\n        const handle_pop_state = (e) => {\n            // Push state again to prevent actual navigation but keep current URL\n            window.history.pushState(null, '', window.location.href);\n        };\n\n        // Prevent navigation\n        window.addEventListener('popstate', handle_pop_state);\n\n        // Cleanup\n        return () => {\n            window.removeEventListener('popstate', handle_pop_state);\n        };\n    }, []);\n\n    // Navigation function\n    const navigate_to = (view, params = {}) => {\n        console.log('Navigating to:', view, params);\n        setCurrentView(view);\n        setViewParams(params);\n    };\n\n    // Make navigate_to globally available for context switching\n    useEffect(() => {\n        window.navigate_to = navigate_to;\n        return () => {\n            delete window.navigate_to;\n        };\n    }, []);\n\n    const navigation_value = {\n        current_view,\n        view_params,\n        navigate_to\n    };\n\n    return (\n        <NavigationContext.Provider value={navigation_value}>\n            <ProtectedApp>\n                <DefaultLayout>\n                    <DynamicPage />\n                </DefaultLayout>\n            </ProtectedApp>\n        </NavigationContext.Provider>\n    );\n};\n\nconst App = () => {\n    // Don't change the URL - just leave it wherever it was loaded\n    return (\n        <AuthProvider>\n            <SiteProvider>\n                <ContextConnector>\n                    <AppContent />\n                </ContextConnector>\n            </SiteProvider>\n        </AuthProvider>\n    );\n};\n\nexport default App;\nexport { NavigationContext };","import React, { useState, useEffect } from 'react';\nimport { useNavigation } from '../../App';\nimport { useSite } from '../../contexts/SiteContext';\n\nconst SidebarMenu = ({ collapsed, onToggleCollapse }) => {\n    const { current_view, navigate_to } = useNavigation();\n    const { menu_items = [], current_context } = useSite();\n    \n    // Debug logging\n    useEffect(() => {\n        console.log('SidebarMenu: Current context:', current_context);\n        console.log('SidebarMenu: Menu items:', menu_items);\n    }, [current_context, menu_items]);\n\n    // Initialize expanded menus from localStorage\n    const [expanded_menus, setExpandedMenus] = useState(() => {\n        const saved = localStorage.getItem('expanded_menus');\n        return saved ? JSON.parse(saved) : {};\n    });\n\n    // Save expanded menus state to localStorage whenever it changes\n    useEffect(() => {\n        localStorage.setItem('expanded_menus', JSON.stringify(expanded_menus));\n    }, [expanded_menus]);\n\n    // Auto-expand active menu sections when view changes\n    useEffect(() => {\n        if (menu_items.length > 0) {\n            auto_expand_active_menus(menu_items);\n        }\n    }, [current_view, menu_items]);\n\n    // Convert URL to view name (remove leading slash and handle nested paths)\n    const url_to_view = (url) => {\n        if (!url) return 'home';\n        return url.replace(/^\\//, '') || 'home';\n    };\n\n    // Check if a menu item is active\n    const is_item_active = (item) => {\n        const item_view = url_to_view(item.url);\n        return current_view === item_view;\n    };\n\n    // Auto-expand menu sections that contain the current active view\n    const auto_expand_active_menus = (items) => {\n        const find_and_expand_active = (items, parent_id = null) => {\n            for (const item of items) {\n                if (is_item_active(item)) {\n                    // Found active item, expand its parent\n                    if (parent_id && !expanded_menus[parent_id]) {\n                        setExpandedMenus(prev => ({\n                            ...prev,\n                            [parent_id]: true\n                        }));\n                    }\n                    return true;\n                }\n\n                if (item.items && item.items.length > 0) {\n                    const found = find_and_expand_active(item.items, item.id);\n                    if (found && !expanded_menus[item.id]) {\n                        setExpandedMenus(prev => ({\n                            ...prev,\n                            [item.id]: true\n                        }));\n                    }\n                }\n            }\n            return false;\n        };\n\n        find_and_expand_active(items);\n    };\n\n    const toggle_menu_expansion = (menu_id) => {\n        setExpandedMenus(prev => ({\n            ...prev,\n            [menu_id]: !prev[menu_id]\n        }));\n    };\n\n    const handle_navigation = (url) => {\n        const view = url_to_view(url);\n        navigate_to(view);\n    };\n\n    const render_menu_item = (item, depth = 0) => {\n        const has_children = item.items && item.items.length > 0;\n        const is_expanded = expanded_menus[item.id];\n        const is_active = is_item_active(item);\n\n        // Check if any child is active\n        const has_active_child = (items) => {\n            return items?.some(child =>\n                is_item_active(child) ||\n                (child.items && has_active_child(child.items))\n            );\n        };\n\n        const is_parent_of_active = has_children && has_active_child(item.items);\n        // Handle tier type items (parent categories)\n        if (item.type === 'tier') {\n            return (\n                <div key={item.id} className=\"sidebar_section\">\n                    <div\n                        className={`sidebar_section_header ${is_parent_of_active ? 'has-active-child' : ''}`}\n                        onClick={() => toggle_menu_expansion(item.id)}\n                        style={{ \n                            cursor: 'pointer',\n                            display: 'flex',\n                            justifyContent: 'space-between',\n                            alignItems: 'center'\n                        }}\n                    >\n                        <h5 style={{ margin: 0, display: 'flex', alignItems: 'center' }}>\n                            {item.icon && <i className={`fas ${item.icon} me-2`}></i>}\n                            {item.display}\n                        </h5>\n                        <i className={`fas fa-chevron-${is_expanded ? 'down' : 'right'}`}></i>\n                    </div>\n                    {is_expanded && (\n                        <ul className=\"nav flex-column\">\n                            {item.items.map(child => render_menu_item(child, depth + 1))}\n                        </ul>\n                    )}\n                </div>\n            );\n        }\n\n        // Handle link type items\n        if (item.type === 'link') {\n            const is_external = item.url?.startsWith('http://') || item.url?.startsWith('https://');\n\n            return (\n                <li key={item.id} className=\"nav-item\">\n                    {has_children ? (\n                        <>\n                            <button\n                                type=\"button\"\n                                className={`nav-link d-flex justify-content-between align-items-center ${is_active ? 'active' : ''} ${is_parent_of_active ? 'has-active-child' : ''}`}\n                                onClick={(e) => {\n                                    e.preventDefault();\n                                    toggle_menu_expansion(item.id);\n                                }}\n                                style={{\n                                    width: '100%',\n                                    border: 'none',\n                                    background: 'transparent',\n                                    textAlign: 'left',\n                                    padding: 'var(--bs-nav-link-padding-y) var(--bs-nav-link-padding-x)'\n                                }}\n                            >\n                                <span>\n                                    {item.icon && <i className={`fas ${item.icon} me-2`}></i>}\n                                    {item.display}\n                                </span>\n                                <i className={`fas fa-chevron-${is_expanded ? 'down' : 'right'}`}></i>\n                            </button>\n                            {is_expanded && (\n                                <ul className=\"nav flex-column ms-3\">\n                                    {item.items.map(child => render_menu_item(child, depth + 1))}\n                                </ul>\n                            )}\n                        </>\n                    ) : (\n                        is_external ? (\n                            <a\n                                href={item.url}\n                                className={`nav-link ${is_active ? 'active' : ''}`}\n                                target={item.new_tab ? '_blank' : undefined}\n                                rel={item.new_tab ? 'noopener noreferrer' : undefined}\n                            >\n                                {item.icon && <i className={`fas ${item.icon} me-2`}></i>}\n                                {item.display}\n                            </a>\n                        ) : (\n                            <button\n                                type=\"button\"\n                                className={`nav-link ${is_active ? 'active' : ''}`}\n                                onClick={() => handle_navigation(item.url)}\n                                style={{\n                                    width: '100%',\n                                    border: 'none',\n                                    background: 'transparent',\n                                    textAlign: 'left',\n                                    cursor: 'pointer'\n                                }}\n                            >\n                                {item.icon && <i className={`fas ${item.icon} me-2`}></i>}\n                                {item.display}\n                            </button>\n                        )\n                    )}\n                </li>\n            );\n        }\n\n        return null;\n    };\n\n    return (\n        <div className=\"sidebar_container\">\n            <aside className=\"sidebar\">\n                <div className=\"sidebar_toggle\" onClick={onToggleCollapse}>\n                    <i className=\"fas fa-chevron-left\"></i>\n                </div>\n                <nav className=\"sidebar_nav\">\n                    {menu_items && menu_items.length > 0 ? (\n                        menu_items.map(item => render_menu_item(item))\n                    ) : (\n                        <div className=\"sidebar_section\">\n                            <h5>Navigation</h5>\n                            <ul className=\"nav flex-column\">\n                                <li className=\"nav-item\">\n                                    <button\n                                        type=\"button\"\n                                        className=\"nav-link\"\n                                        onClick={() => navigate_to('home')}\n                                        style={{\n                                            width: '100%',\n                                            border: 'none',\n                                            background: 'transparent',\n                                            textAlign: 'left',\n                                            cursor: 'pointer'\n                                        }}\n                                    >\n                                        <i className=\"fas fa-home me-2\"></i>Dashboard\n                                    </button>\n                                </li>\n                            </ul>\n                        </div>\n                    )}\n                </nav>\n            </aside>\n        </div>\n    );\n};\n\n// Memoize but include menu_items in dependency check\nexport default React.memo(SidebarMenu, (prevProps, nextProps) => {\n    // Re-render if collapsed state changes\n    return prevProps.collapsed === nextProps.collapsed;\n});","import React, { useState, useEffect, useRef } from 'react';\nimport { useSite } from '../../contexts/SiteContext';\n\nconst NineDotMenu = ({\n    theme,\n    user,\n    onToggleTheme,\n    onLogout\n}) => {\n    const [is_open, setIsOpen] = useState(false);\n    const menu_ref = useRef(null);\n    \n    // Get context data directly\n    const { current_context, available_contexts, switch_context } = useSite();\n\n    // Handle outside clicks\n    useEffect(() => {\n        if (!is_open) return;\n\n        const handle_outside_click = (e) => {\n            if (menu_ref.current && !menu_ref.current.contains(e.target)) {\n                setIsOpen(false);\n            }\n        };\n\n        // Add delay to prevent immediate trigger\n        const timer = setTimeout(() => {\n            document.addEventListener('click', handle_outside_click);\n        }, 100);\n\n        return () => {\n            clearTimeout(timer);\n            document.removeEventListener('click', handle_outside_click);\n        };\n    }, [is_open]);\n\n    const handle_context_switch = (context_name) => {\n        switch_context(context_name);\n        setIsOpen(false);\n    };\n\n    const handle_theme_toggle = () => {\n        onToggleTheme();\n    };\n\n    const handle_logout = (e) => {\n        e.preventDefault();\n        onLogout();\n        setIsOpen(false);\n    };\n\n    // Debug current state\n    useEffect(() => {\n        console.log('NineDotMenu state:', {\n            current_context,\n            available_contexts,\n            user,\n            contexts_type: Array.isArray(available_contexts) ? 'array' : typeof available_contexts,\n            contexts_content: available_contexts\n        });\n    }, [current_context, available_contexts, user]);\n\n    return (\n        <div className=\"nine_dot_menu\" ref={menu_ref} style={{ position: 'relative' }}>\n            <button\n                className=\"nine_dot_btn\"\n                onClick={(e) => {\n                    e.preventDefault();\n                    e.stopPropagation();\n                    setIsOpen(prev => !prev);\n                }}\n                type=\"button\"\n                style={{\n                    background: 'none',\n                    border: 'none',\n                    padding: '8px',\n                    cursor: 'pointer',\n                    fontSize: '20px',\n                    color: 'inherit'\n                }}\n                aria-label=\"Settings menu\"\n                aria-expanded={is_open}\n            >\n                <i className=\"fas fa-th\"></i>\n            </button>\n\n            {is_open && (\n                <div\n                    className=\"nine_dot_dropdown\"\n                    style={{\n                        position: 'absolute',\n                        right: 0,\n                        top: '100%',\n                        marginTop: '8px',\n                        minWidth: '250px',\n                        backgroundColor: theme === 'dark' ? 'var(--theme-surface-dark)' : 'var(--theme-surface)',\n                        border: `1px solid ${theme === 'dark' ? 'var(--theme-border-color-dark)' : 'var(--theme-border-color)'}`,\n                        borderRadius: 'var(--theme-card-border-radius)',\n                        boxShadow: 'var(--theme-shadow-lg)',\n                        zIndex: 1000,\n                        padding: '16px',\n                        color: theme === 'dark' ? 'var(--theme-text-dark)' : 'var(--theme-text)'\n                    }}\n                >\n                    {/* Context Switcher */}\n                    {console.log('Contexts check:', {\n                        available_contexts,\n                        length: available_contexts?.length,\n                        show: available_contexts && available_contexts.length > 1\n                    })}\n                    {available_contexts && available_contexts.length > 0 && (\n                        <>\n                            <div className=\"dropdown_section mb-3\">\n                                <h6 className=\"mb-2\" style={{\n                                    color: theme === 'dark' ? 'var(--theme-text-muted-dark)' : 'var(--theme-text-muted)'\n                                }}>\n                                    Application Switcher\n                                </h6>\n                                <div className=\"context_switcher\">\n                                    {available_contexts.map(context => {\n                                        // Compare using the ID field since that's what the server expects\n                                        const is_active = current_context === context.name ||\n                                                         // Also check if current_context matches the context field\n                                                         (context.context && current_context === context.context);\n\n                                        // Debug logging\n                                        console.log('Context comparison:', {\n                                            context,\n                                            current_context,\n                                            is_active,\n                                            checks: {\n                                                name_match: current_context === context.name,\n                                                context_match: context.context && current_context === context.context\n                                            }\n                                        });\n\n                                        return (\n                                            <button\n                                                key={context.name}\n                                                type=\"button\"\n                                                className={`btn btn-sm w-100 mb-2 ${\n                                                    is_active\n                                                        ? 'btn-primary'\n                                                        : 'btn-outline-secondary'\n                                                }`}\n                                                onClick={() => handle_context_switch(context.name)}\n                                                disabled={is_active}\n                                            >\n                                                {context.icon && <i className={`${context.icon} me-2`}></i>}\n                                                {context.display || context.name}\n                                            </button>\n                                        );\n                                    })}\n                                </div>\n                            </div>\n\n                        </>\n                    )}\n\n                    {/* Theme Toggle */}\n                    <div className=\"dropdown_section mb-3\">\n                        <div className=\"theme_toggle d-flex align-items-center\">\n                            <div className=\"form-check form-switch\">\n                                <input\n                                    className=\"form-check-input\"\n                                    type=\"checkbox\"\n                                    id=\"dark_mode_toggle\"\n                                    checked={theme === 'dark'}\n                                    onChange={handle_theme_toggle}\n                                />\n                                <label className=\"form-check-label ms-2\" htmlFor=\"dark_mode_toggle\">\n                                    Dark Mode\n                                </label>\n                            </div>\n                        </div>\n                    </div>\n\n\n                    {/* Account Section */}\n                    <div className=\"dropdown_section\">\n                        {user && (\n                            <div className=\"user_info mb-3 p-2 rounded\" style={{\n                                backgroundColor: theme === 'dark' ? 'var(--theme-background-dark)' : 'var(--theme-component)',\n                                border: `1px solid ${theme === 'dark' ? 'var(--theme-border-color-dark)' : 'var(--theme-border-color)'}`\n                            }}>\n                                <small className=\"d-block\" style={{\n                                    color: theme === 'dark' ? 'var(--theme-text-muted-dark)' : 'var(--theme-text-muted)'\n                                }}>\n                                    Logged in as:\n                                </small>\n                                <strong>{user.name || user.username || user.email}</strong>\n                            </div>\n                        )}\n                        <button\n                            type=\"button\"\n                            className=\"dropdown_link btn btn-sm btn-outline-danger w-100\"\n                            onClick={handle_logout}\n                            style={{\n                                borderColor: 'var(--theme-danger)',\n                                color: 'var(--theme-danger)'\n                            }}\n                            onMouseEnter={(e) => {\n                                e.target.style.backgroundColor = 'var(--theme-danger)';\n                                e.target.style.color = 'white';\n                            }}\n                            onMouseLeave={(e) => {\n                                e.target.style.backgroundColor = 'transparent';\n                                e.target.style.color = 'var(--theme-danger)';\n                            }}\n                        >\n                            <i className=\"fas fa-sign-out-alt me-2\"></i>Logout\n                        </button>\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default NineDotMenu;","// react/src/config/index.js\nconst config = {\n    api: {\n        base: '/v2/api',\n        endpoints: {\n            // Auth endpoints\n            auth: {\n                login: '/auth/login',\n                logout: '/auth/logout',\n                validate: '/auth/validate',\n                refresh: '/auth/refresh',\n                status: '/auth/status'\n            },\n            // Template endpoints\n            templates: {\n                get: '/templates/:slug'\n            },\n            // Route resolution\n            routes: {\n                resolve: '/routes/resolve',\n                list: '/routes'\n            },\n            // Data endpoint\n            data: '/data'\n        }\n    },\n\n    // Build full URL from endpoint\n    getUrl: (endpoint, params = {}) => {\n        let url = `${config.api.base}${endpoint}`;\n\n        // Replace URL parameters like :name\n        Object.keys(params).forEach(key => {\n            url = url.replace(`:${key}`, params[key]);\n        });\n\n        return url;\n    },\n\n    // Wrap fetch to check for CSRF invalid\n    apiCall: async (url, options = {}) => {\n        const response = await fetch(url, options);\n        \n        // Check for CSRF invalid\n        if (!response.ok) {\n            const content_type = response.headers.get('content-type');\n            if (content_type && content_type.includes('application/json')) {\n                const data = await response.json();\n                \n                if (data.success === false && data.csrf_invalid === true) {\n                    console.log('CSRF invalid - clearing auth and reloading');\n                    \n                    // Clear everything\n                    localStorage.removeItem('api_token');\n                    localStorage.removeItem('refresh_token');\n                    localStorage.removeItem('user_id');\n                    localStorage.removeItem('user_info');\n                    localStorage.removeItem('default_context');\n                    sessionStorage.clear();\n                    \n                    // Just reload the page - the app will show login since auth is cleared\n                    window.location.reload();\n                    \n                    // Return the response anyway\n                    return response;\n                }\n                \n                // Re-create response since we consumed it\n                return new Response(JSON.stringify(data), {\n                    status: response.status,\n                    statusText: response.statusText,\n                    headers: response.headers\n                });\n            }\n        }\n        \n        return response;\n    },\n\n    // Get auth headers\n    getAuthHeaders: () => ({\n        'Authorization': `Bearer ${localStorage.getItem('api_token') || ''}`,\n        'X-CSRF-Token': document.querySelector('meta[name=\"csrf-token\"]')?.content || '',\n        'Content-Type': 'application/json'\n    })\n};\n\n// Make it available globally if needed\nwindow.appConfig = config;\n\nexport default config;","// react/src/contexts/AuthContext.js\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport config from '../config';\n\nconst AuthContext = createContext(null);\n\nexport const useAuth = () => {\n    const context = useContext(AuthContext);\n    if (!context) throw new Error('useAuth must be used within AuthProvider');\n    return context;\n};\n\nexport const AuthProvider = ({ children }) => {\n    const [isAuthenticated, setIsAuthenticated] = useState(false);\n    const [loading, setLoading] = useState(true);\n    const [user, setUser] = useState(null);\n\n    // We'll need to access SiteContext's clear_section\n    const [clear_site_callback, setClearSiteCallback] = useState(null);\n\n    // Allow SiteProvider to register its clear function\n    const register_clear_site = (callback) => {\n        setClearSiteCallback(() => callback);\n    };\n\n    // Check if we have valid tokens on mount\n    useEffect(() => {\n        checkAuth();\n    }, []);\n\n    const checkAuth = async () => {\n        const api_token = localStorage.getItem('api_token');\n        const refresh_token = localStorage.getItem('refresh_token');\n\n        if (!api_token || !refresh_token) {\n            setLoading(false);\n            return;\n        }\n\n        try {\n            // First try to validate the current token\n            const response = await config.apiCall(config.getUrl(config.api.endpoints.auth.validate), {\n                method: 'POST',\n                headers: {\n                    'Authorization': `Bearer ${api_token}`,\n                    'Content-Type': 'application/json',\n                    'X-CSRF-Token': document.querySelector('meta[name=\"csrf-token\"]')?.content || ''\n                }\n            });\n\n            if (response.ok) {\n                const data = await response.json();\n                setIsAuthenticated(true);\n                setUser(data.user_info);\n\n                // Set up periodic token validation\n                start_token_check_interval();\n            } else if (response.status === 401) {\n                // Token is invalid, try to refresh\n                const refresh_success = await refreshToken();\n                if (refresh_success) {\n                    // Retry validation after refresh\n                    await checkAuth();\n                } else {\n                    // Refresh failed, clear auth\n                    clearAuth();\n                }\n            } else {\n                // Other error, clear auth\n                clearAuth();\n            }\n        } catch (error) {\n            console.error('Auth check failed:', error);\n            clearAuth();\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const login = async (username, password, remember) => {\n        try {\n            const response = await config.apiCall(config.getUrl(config.api.endpoints.auth.login), {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'X-CSRF-Token': document.querySelector('meta[name=\"csrf-token\"]')?.content || ''\n                },\n                body: JSON.stringify({ username, password, remember })\n            });\n\n            if (response.ok) {\n                const data = await response.json();\n\n                // Store tokens\n                localStorage.setItem('api_token', data.api_token);\n                localStorage.setItem('refresh_token', data.refresh_token);\n                localStorage.setItem('user_id', data.user_id);\n                localStorage.setItem('user_info', JSON.stringify(data.user_info));\n\n                // Store the ACTUAL default context from login\n                if (data.default_context) {\n                    localStorage.setItem('default_context', data.default_context);\n                    sessionStorage.setItem('current_context', data.default_context);\n                    sessionStorage.setItem('current_section', data.default_context); // Also store as section for compatibility\n                }\n\n                // Handle remember me\n                if (remember) {\n                    localStorage.setItem('remembered_username', username);\n                } else {\n                    localStorage.removeItem('remembered_username');\n                }\n\n                setIsAuthenticated(true);\n                setUser(data.user_info);\n\n                // Start token check interval after successful login\n                start_token_check_interval();\n\n                return {\n                    success: true,\n                    landing_page: data.landing_page || '/',\n                    default_context: data.default_context\n                };\n            } else {\n                const error_data = await response.json();\n                return {\n                    success: false,\n                    message: error_data.message || 'Login failed'\n                };\n            }\n        } catch (error) {\n            console.error('Login error:', error);\n            return { success: false, message: 'Login failed' };\n        }\n    };\n\n    const refreshToken = async () => {\n        const refresh_token = localStorage.getItem('refresh_token');\n        if (!refresh_token) {\n            clearAuth();\n            return false;\n        }\n\n        try {\n            const response = await config.apiCall(config.getUrl(config.api.endpoints.auth.refresh), {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'X-CSRF-Token': document.querySelector('meta[name=\"csrf-token\"]')?.content || ''\n                },\n                body: JSON.stringify({ refresh_token })\n            });\n\n            if (response.ok) {\n                const data = await response.json();\n                localStorage.setItem('api_token', data.api_token);\n\n                // Update user info if provided\n                if (data.user_info) {\n                    localStorage.setItem('user_info', JSON.stringify(data.user_info));\n                    setUser(data.user_info);\n                }\n\n                setIsAuthenticated(true);\n                return true;\n            } else {\n                // Refresh token is also invalid\n                console.log('Refresh token invalid, logging out');\n                clearAuth();\n                return false;\n            }\n        } catch (error) {\n            console.error('Token refresh failed:', error);\n            clearAuth();\n            return false;\n        }\n    };\n\n    const logout = () => {\n        clearAuth();\n        // Clear site context if callback is registered\n        if (clear_site_callback) {\n            clear_site_callback();\n        }\n    };\n\n    const clearAuth = () => {\n        // Clear all auth data\n        localStorage.removeItem('api_token');\n        localStorage.removeItem('refresh_token');\n        localStorage.removeItem('user_id');\n        localStorage.removeItem('user_info');\n        localStorage.removeItem('default_context');  // Changed from default_section\n\n        // Clear state\n        setIsAuthenticated(false);\n        setUser(null);\n\n        // Stop token check interval\n        stop_token_check_interval();\n    };\n\n    // Periodic token validation\n    let token_check_interval = null;\n\n    const start_token_check_interval = () => {\n        // Clear any existing interval\n        stop_token_check_interval();\n\n        // Check token every 5 minutes\n        token_check_interval = setInterval(async () => {\n            const api_token = localStorage.getItem('api_token');\n            if (!api_token) {\n                clearAuth();\n                return;\n            }\n\n            try {\n                const response = await config.apiCall(config.getUrl(config.api.endpoints.auth.validate), {\n                    method: 'POST',\n                    headers: {\n                        'Authorization': `Bearer ${api_token}`,\n                        'Content-Type': 'application/json',\n                        'X-CSRF-Token': document.querySelector('meta[name=\"csrf-token\"]')?.content || ''\n                    }\n                });\n\n                if (!response.ok) {\n                    if (response.status === 401) {\n                        // Try to refresh\n                        const refresh_success = await refreshToken();\n                        if (!refresh_success) {\n                            // Refresh failed, clear auth but don't redirect here\n                            // Let the ProtectedRoute component handle navigation\n                            clearAuth();\n                        }\n                    }\n                }\n            } catch (error) {\n                console.error('Token validation error:', error);\n            }\n        }, 5 * 60 * 1000); // 5 minutes\n    };\n\n    const stop_token_check_interval = () => {\n        if (token_check_interval) {\n            clearInterval(token_check_interval);\n            token_check_interval = null;\n        }\n    };\n\n    // Clean up interval on unmount\n    useEffect(() => {\n        return () => {\n            stop_token_check_interval();\n        };\n    }, []);\n\n    // Set up global auth headers helper\n    useEffect(() => {\n        if (!window.app) window.app = {};\n\n        window.app.getAuthHeaders = () => {\n            const token = localStorage.getItem('api_token');\n            return {\n                'Authorization': token ? `Bearer ${token}` : '',\n                'X-CSRF-Token': document.querySelector('meta[name=\"csrf-token\"]')?.content || ''\n            };\n        };\n\n        // Add global request interceptor for 401 responses\n        const original_fetch = window.fetch;\n        window.fetch = async (...args) => {\n            const response = await original_fetch(...args);\n\n            // If we get a 401 and we're not already on the login page\n            if (response.status === 401 && !window.location.pathname.includes('/login')) {\n                const url = typeof args[0] === 'string' ? args[0] : args[0].url;\n\n                // Don't intercept auth endpoints\n                if (!url.includes('/auth/')) {\n                    // Try to refresh token\n                    const refresh_success = await refreshToken();\n                    if (refresh_success) {\n                        // Retry the original request with new token\n                        if (args[1] && args[1].headers) {\n                            args[1].headers['Authorization'] = `Bearer ${localStorage.getItem('api_token')}`;\n                        }\n                        return original_fetch(...args);\n                    } else {\n                        // Refresh failed, clear auth\n                        clearAuth();\n                    }\n                }\n            }\n\n            return response;\n        };\n\n        // Restore original fetch on cleanup\n        return () => {\n            window.fetch = original_fetch;\n        };\n    }, []);\n\n    return (\n        <AuthContext.Provider value={{\n            isAuthenticated,\n            loading,\n            user,\n            login,\n            logout,\n            refreshToken,\n            checkAuth,\n            register_clear_site\n        }}>\n            {children}\n        </AuthContext.Provider>\n    );\n};","// react/src/contexts/SiteContext.js\nimport React, { createContext, useState, useContext, useRef, useCallback, useEffect } from 'react';\nimport config from '../config';\n\nconst SiteContext = createContext(null);\n\nexport const useSite = () => {\n    const context = useContext(SiteContext);\n    if (!context) throw new Error('useSite must be used within SiteProvider');\n    return context;\n};\n\nexport const SiteProvider = ({ children }) => {\n    const [current_context, setCurrentContext] = useState(() => {\n        // Check session storage for current session's context\n        return sessionStorage.getItem('current_context') || null;\n    });\n\n    const [available_contexts, setAvailableContexts] = useState([]);\n    const [context_loading, setContextLoading] = useState(false);\n\n    // Separate state for different parts of site config\n    const [site_info, setSiteInfo] = useState(null); // Name, logo, footer - doesn't change\n    const [menu_items, setMenuItems] = useState([]); // Menu - changes per context\n\n    // Track what we're currently fetching to prevent duplicate requests\n    const fetching_context = useRef(null);\n    const has_initial_fetch = useRef(false);\n\n    // Initialize default context from login\n    const initialize_context = (default_context) => {\n        console.log('SiteContext: Initializing context:', default_context);\n        if (default_context) {\n            setCurrentContext(default_context);\n            sessionStorage.setItem('current_context', default_context);\n        }\n    };\n\n    // Get the current context, with fallback to default\n    const get_current_context = () => {\n        const context = current_context || sessionStorage.getItem('current_context') || localStorage.getItem('default_context') || 'default';\n        console.log('SiteContext: Getting current context:', context);\n        return context;\n    };\n\n    const fetch_site_config = useCallback(async (path = '/') => {\n        const context = get_current_context();\n        console.log('SiteContext: Fetching config for context:', context, 'path:', path);\n\n        // Don't fetch if we're already fetching the same context\n        if (fetching_context.current === context && has_initial_fetch.current) {\n            console.log('SiteContext: Already fetching this context, skipping');\n            return;\n        }\n\n        fetching_context.current = context;\n        setContextLoading(true);\n\n        try {\n            const request_body = {\n                path: path,\n                context: context,\n                include_contexts: true\n            };\n\n            console.log('SiteContext: Making API call with body:', request_body);\n\n            const response = await config.apiCall(config.getUrl('/site/config'), {\n                method: 'POST',\n                headers: config.getAuthHeaders(),\n                body: JSON.stringify(request_body)\n            });\n\n            if (response.ok) {\n                const data = await response.json();\n                console.log('SiteContext: Received site config:', data);\n\n                // Always set site info\n                setSiteInfo({\n                    name: data.site.name,\n                    logo_desktop: data.site.logo_desktop,\n                    logo_desktop_dark: data.site.logo_desktop_dark,\n                    footer_text: data.site.footer_text,\n                    tagline: data.site.tagline,\n                    maintenance_mode: data.site.maintenance_mode\n                });\n\n                // Always update menu items (they change per context)\n                console.log('SiteContext: Setting menu items:', data.menu?.items);\n                setMenuItems(data.menu?.items || []);\n\n                if (data.contexts) {\n                    console.log('SiteContext: Setting available contexts:', data.contexts);\n                    setAvailableContexts(data.contexts);\n                }\n\n                // Update current context if server says it's different\n                if (data.current_context && data.current_context !== context) {\n                    console.log('SiteContext: Server returned different context:', data.current_context);\n                    setCurrentContext(data.current_context);\n                    sessionStorage.setItem('current_context', data.current_context);\n                }\n\n                has_initial_fetch.current = true;\n            } else {\n                console.error('SiteContext: Failed to fetch site config:', response.status);\n            }\n        } catch (error) {\n            console.error('SiteContext: Site config fetch error:', error);\n        } finally {\n            setContextLoading(false);\n            fetching_context.current = null;\n        }\n    }, [current_context]);\n\n    // Context switch - fetch new menu items\n    const switch_context = async (context_name) => {\n        console.log('SiteContext: Switching context from', current_context, 'to', context_name);\n\n        // Don't switch if it's the same context\n        if (context_name === current_context) {\n            console.log('SiteContext: Same context, not switching');\n            return;\n        }\n\n        // Update the context immediately\n        setCurrentContext(context_name);\n        sessionStorage.setItem('current_context', context_name);\n\n        // Clear main content by navigating to home\n        if (window.navigate_to) {\n            window.navigate_to('home');\n        }\n\n        // Fetch new menu items for this context\n        setContextLoading(true);\n\n        try {\n            const request_body = {\n                path: '/',\n                context: context_name,\n                include_contexts: false // Don't need contexts again\n            };\n\n            console.log('SiteContext: Fetching menu for new context:', request_body);\n\n            const response = await config.apiCall(config.getUrl('/site/config'), {\n                method: 'POST',\n                headers: config.getAuthHeaders(),\n                body: JSON.stringify(request_body)\n            });\n\n            if (response.ok) {\n                const data = await response.json();\n                console.log('SiteContext: Received menu items for new context:', data.menu?.items);\n\n                // Update menu items\n                setMenuItems(data.menu?.items || []);\n\n                // If server returned different context, update it\n                if (data.current_context && data.current_context !== context_name) {\n                    console.log('SiteContext: Server corrected context to:', data.current_context);\n                    setCurrentContext(data.current_context);\n                    sessionStorage.setItem('current_context', data.current_context);\n                }\n            }\n        } catch (error) {\n            console.error('SiteContext: Context switch error:', error);\n        } finally {\n            setContextLoading(false);\n        }\n    };\n\n    // Clear context data on logout\n    const clear_context = () => {\n        console.log('SiteContext: Clearing all context data');\n        setCurrentContext(null);\n        setAvailableContexts([]);\n        setSiteInfo(null);\n        setMenuItems([]);\n        sessionStorage.removeItem('current_context');\n        has_initial_fetch.current = false;\n    };\n\n    // Debug log state changes\n    useEffect(() => {\n        console.log('SiteContext state updated:', {\n            current_context,\n            available_contexts: available_contexts.length,\n            menu_items: menu_items.length,\n            site_info: !!site_info\n        });\n    }, [current_context, available_contexts, menu_items, site_info]);\n\n    // Provide combined site_config for backward compatibility\n    const site_config = site_info ? {\n        ...site_info,\n        menu_items,\n        contexts: available_contexts,\n        current_context\n    } : null;\n\n    return (\n        <SiteContext.Provider value={{\n            current_context,\n            available_contexts,\n            context_loading,\n            site_config,\n            site_info,\n            menu_items,\n            setAvailableContexts,\n            setContextLoading,\n            initialize_context,\n            switch_context,\n            clear_context,\n            get_current_context,\n            fetch_site_config\n        }}>\n            {children}\n        </SiteContext.Provider>\n    );\n};","import React from 'react';\nimport { useNavigation } from '../../App';\nimport { useSite } from '../../contexts/SiteContext';\n\nconst Breadcrumbs = () => {\n    const { current_view, navigate_to } = useNavigation();\n    const { site_info, current_context, available_contexts } = useSite();\n\n    // Get current context display name\n    const get_context_display_name = () => {\n        if (!current_context || !available_contexts || available_contexts.length === 0) {\n            return 'Home';\n        }\n\n        const context = available_contexts.find(c => c.name === current_context);\n        return context ? context.display : current_context;\n    };\n\n    // Parse the current view into breadcrumb items\n    const get_breadcrumb_items = () => {\n        const items = [];\n\n        // Always start with the context name\n        items.push({\n            label: get_context_display_name(),\n            view: 'home',\n            is_last: current_view === 'home'\n        });\n\n        // Add view segments if not on home\n        if (current_view !== 'home') {\n            // Convert view name to readable format (snake_case to Title Case)\n            const label = current_view\n                .split('_')\n                .map(word => word.charAt(0).toUpperCase() + word.slice(1))\n                .join(' ');\n\n            items.push({\n                label: label,\n                view: current_view,\n                is_last: true\n            });\n        }\n\n        return items;\n    };\n\n    const breadcrumb_items = get_breadcrumb_items();\n\n    return (\n        <div className=\"breadcrumbs\">\n            <nav aria-label=\"breadcrumb\">\n                <ol className=\"breadcrumb\">\n                    {breadcrumb_items.map((item, index) => (\n                        <li\n                            key={index}\n                            className={`breadcrumb-item ${item.is_last ? 'active' : ''}`}\n                            aria-current={item.is_last ? 'page' : undefined}\n                        >\n                            {item.is_last ? (\n                                item.label\n                            ) : (\n                                <button\n                                    onClick={() => navigate_to(item.view)}\n                                    style={{\n                                        background: 'none',\n                                        border: 'none',\n                                        color: 'var(--bs-link-color)',\n                                        cursor: 'pointer',\n                                        padding: 0,\n                                        textDecoration: 'underline'\n                                    }}\n                                >\n                                    {item.label}\n                                </button>\n                            )}\n                        </li>\n                    ))}\n                </ol>\n            </nav>\n        </div>\n    );\n};\n\nexport default Breadcrumbs;","// react/src/components/AppShell.js\nimport React, { useState, useEffect } from 'react';\nimport { useAuth } from '../contexts/AuthContext';\nimport { useSiteInfo, useMenu, useContextState } from '../contexts/SiteContext';\nimport NineDotMenu from './layout/NineDotMenu';\nimport Breadcrumbs from './layout/Breadcrumbs';\nimport SidebarMenu from './layout/SidebarMenu';\n\nconst AppShell = ({ children }) => {\n    const { user, logout } = useAuth();\n    \n    const [theme, setTheme] = useState(() => {\n        return localStorage.getItem('theme_preference') || 'light';\n    });\n    const [sidebar_collapsed, setSidebarCollapsed] = useState(false);\n\n    // Apply theme\n    useEffect(() => {\n        document.documentElement.setAttribute('data-theme', theme);\n        document.documentElement.setAttribute('data-bs-theme', theme);\n        localStorage.setItem('theme_preference', theme);\n    }, [theme]);\n\n    const handle_theme_toggle = () => {\n        setTheme(prev => prev === 'light' ? 'dark' : 'light');\n    };\n\n    const toggle_sidebar = () => {\n        setSidebarCollapsed(!sidebar_collapsed);\n    };\n\n    return (\n        <div id=\"app-content\">\n            <div className=\"topbar htmx-indicator\"></div>\n\n            <header className=\"header\">\n                <HeaderContent theme={theme} />\n                \n                <div className=\"header_actions\">\n                    <MaintenanceIndicator />\n                    <NineDotMenuWrapper\n                        theme={theme}\n                        user={user}\n                        onToggleTheme={handle_theme_toggle}\n                        onLogout={logout}\n                    />\n                </div>\n            </header>\n\n            <BreadcrumbsWrapper />\n\n            <div className={`content_area ${sidebar_collapsed ? 'collapsed' : ''}`}>\n                <SidebarMenu\n                    collapsed={sidebar_collapsed}\n                    onToggleCollapse={toggle_sidebar}\n                />\n\n                <div className=\"main_content\" id=\"main-content\">\n                    {children}\n                </div>\n            </div>\n\n            <FooterContent />\n        </div>\n    );\n};\n\n// Separate components that subscribe to specific contexts\nconst HeaderContent = React.memo(({ theme }) => {\n    const { site_info } = useSiteInfo();\n    \n    if (!site_info) return null;\n    \n    return (\n        <div className=\"header_brand\">\n            <div className=\"logo_wrapper\">\n                {theme === 'light' ? (\n                    site_info.logo_desktop && (\n                        <img\n                            src={site_info.logo_desktop}\n                            alt={`${site_info.name || 'Site'} logo`}\n                            className=\"header_logo\"\n                        />\n                    )\n                ) : (\n                    site_info.logo_desktop_dark && (\n                        <img\n                            src={site_info.logo_desktop_dark}\n                            alt={`${site_info.name || 'Site'} logo`}\n                            className=\"header_logo\"\n                        />\n                    )\n                )}\n            </div>\n            <h1>{site_info.name || 'Dashboard'}</h1>\n        </div>\n    );\n});\n\nconst MaintenanceIndicator = React.memo(() => {\n    const { site_info } = useSiteInfo();\n    \n    if (!site_info?.maintenance_mode) return null;\n    \n    return (\n        <div className=\"maintenance_indicator me-3\">\n            <span className=\"badge bg-warning text-dark\">\n                <i className=\"fas fa-tools me-1\"></i>\n                Maintenance Mode\n            </span>\n        </div>\n    );\n});\n\nconst NineDotMenuWrapper = React.memo(({ theme, user, onToggleTheme, onLogout }) => {\n    const {\n        current_context,\n        available_contexts,\n        switch_context\n    } = useContextState();\n    \n    return (\n        <NineDotMenu\n            theme={theme}\n            user={user}\n            available_contexts={available_contexts || []}\n            current_context={current_context}\n            onSwitchContext={switch_context}\n            onToggleTheme={onToggleTheme}\n            onLogout={onLogout}\n        />\n    );\n});\n\nconst BreadcrumbsWrapper = React.memo(() => {\n    const { site_info } = useSiteInfo();\n    const { current_context, available_contexts } = useContextState();\n    \n    return (\n        <Breadcrumbs\n            site_config={site_info}\n            current_context={current_context}\n            available_contexts={available_contexts}\n        />\n    );\n});\n\nconst FooterContent = React.memo(() => {\n    const { site_info } = useSiteInfo();\n    \n    if (!site_info) return null;\n    \n    return (\n        <footer className=\"footer\">\n            <div className=\"footer_content\">\n                <p>{site_info.footer_text || `© ${new Date().getFullYear()} ${site_info.name || 'Your Company'}. All rights reserved.`}</p>\n                {site_info.tagline && (\n                    <p className=\"tagline\">{site_info.tagline}</p>\n                )}\n            </div>\n        </footer>\n    );\n});\n\nexport default AppShell;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","__webpack_require__.j = 423;","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t247: 0,\n\t423: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkreact_app\"] = self[\"webpackChunkreact_app\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [184], () => (__webpack_require__(900)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["root","factory","exports","module","define","amd","self","deferred","NavigationContext","React","useNavigation","context","Error","SidebarMenu","_ref","collapsed","onToggleCollapse","_useNavigation","current_view","navigate_to","_useSite","useSite","_useSite$menu_items","menu_items","current_context","useEffect","console","log","_useState2","useState","saved","localStorage","getItem","JSON","parse","expanded_menus","setExpandedMenus","setItem","stringify","length","auto_expand_active_menus","url_to_view","url","replace","is_item_active","item","item_view","items","find_and_expand_active","_step","parent_id","arguments","undefined","_iterator","_createForOfIteratorHelper","_ret","_loop","value","prev","_objectSpread","_defineProperty","v","id","s","n","done","err","e","f","toggle_menu_expansion","menu_id","render_menu_item","depth","has_children","is_expanded","is_active","has_active_child","some","child","is_parent_of_active","type","key","className","concat","onClick","style","cursor","display","justifyContent","alignItems","margin","icon","map","_item$url","_item$url2","is_external","startsWith","preventDefault","width","border","background","textAlign","padding","href","target","new_tab","rel","view","prevProps","nextProps","theme","user","onToggleTheme","onLogout","is_open","setIsOpen","menu_ref","useRef","available_contexts","switch_context","handle_outside_click","current","contains","timer","setTimeout","document","addEventListener","clearTimeout","removeEventListener","contexts_type","Array","isArray","_typeof","contexts_content","ref","position","stopPropagation","fontSize","color","right","top","marginTop","minWidth","backgroundColor","borderRadius","boxShadow","zIndex","show","name","checks","name_match","context_match","context_name","disabled","checked","onChange","htmlFor","username","email","borderColor","onMouseEnter","onMouseLeave","t","r","Symbol","iterator","o","toStringTag","i","c","prototype","Generator","u","Object","create","_regeneratorDefine2","p","y","G","a","d","bind","l","TypeError","call","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","setPrototypeOf","__proto__","displayName","_regenerator","w","m","defineProperty","enumerable","configurable","writable","_invoke","asyncGeneratorStep","Promise","resolve","then","_apiCall","config","api","base","endpoints","auth","login","logout","validate","refresh","status","templates","get","routes","list","data","getUrl","endpoint","params","keys","forEach","apiCall","_callee","options","response","content_type","_args","_context","fetch","ok","headers","includes","json","success","csrf_invalid","removeItem","sessionStorage","clear","window","location","reload","Response","statusText","apply","_next","_throw","_x","getAuthHeaders","_document$querySelect","querySelector","content","appConfig","AuthContext","createContext","useAuth","useContext","SiteContext","site_info","get_context_display_name","find","breadcrumb_items","push","label","is_last","split","word","charAt","toUpperCase","slice","join","get_breadcrumb_items","index","textDecoration","HeaderContent","_ref2","useSiteInfo","logo_desktop","src","alt","logo_desktop_dark","MaintenanceIndicator","maintenance_mode","NineDotMenuWrapper","_ref3","_useContextState","useContextState","NineDotMenu","onSwitchContext","BreadcrumbsWrapper","_useContextState2","Breadcrumbs","site_config","FooterContent","footer_text","Date","getFullYear","tagline","children","_useAuth","_slicedToArray","setTheme","_useState4","sidebar_collapsed","setSidebarCollapsed","documentElement","setAttribute","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","every","splice","definition","obj","prop","hasOwnProperty","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","__webpack_exports__"],"sourceRoot":""}